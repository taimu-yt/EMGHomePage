{"ast":null,"code":"import _defineProperty from \"C:/work/EMG/EMGHomePage/app/daikichi/ganttdules/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { constructFrom } from \"../../../constructFrom.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\nimport { parseTimezonePattern } from \"../utils.js\";\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nexport class ISOTimezoneWithZParser extends Parser {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"priority\", 10);\n    _defineProperty(this, \"incompatibleTokens\", [\"t\", \"T\", \"x\"]);\n  }\n  parse(dateString, token) {\n    switch (token) {\n      case \"X\":\n        return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);\n      case \"XX\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"XXXX\":\n        return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);\n      case \"XXXXX\":\n        return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);\n      case \"XXX\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, date.getTime() - getTimezoneOffsetInMilliseconds(date) - value);\n  }\n}","map":{"version":3,"names":["constructFrom","getTimezoneOffsetInMilliseconds","timezonePatterns","Parser","parseTimezonePattern","ISOTimezoneWithZParser","constructor","arguments","_defineProperty","parse","dateString","token","basicOptionalMinutes","basic","basicOptionalSeconds","extendedOptionalSeconds","extended","set","date","flags","value","timestampIsSet","getTime"],"sources":["C:/work/EMG/EMGHomePage/app/daikichi/ganttdules/node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.js"],"sourcesContent":["import { constructFrom } from \"../../../constructFrom.js\";\r\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.js\";\r\nimport { timezonePatterns } from \"../constants.js\";\r\nimport { Parser } from \"../Parser.js\";\r\n\r\nimport { parseTimezonePattern } from \"../utils.js\";\r\n\r\n// Timezone (ISO-8601. +00:00 is `'Z'`)\r\nexport class ISOTimezoneWithZParser extends Parser {\r\n  priority = 10;\r\n\r\n  parse(dateString, token) {\r\n    switch (token) {\r\n      case \"X\":\r\n        return parseTimezonePattern(\r\n          timezonePatterns.basicOptionalMinutes,\r\n          dateString,\r\n        );\r\n      case \"XX\":\r\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\r\n      case \"XXXX\":\r\n        return parseTimezonePattern(\r\n          timezonePatterns.basicOptionalSeconds,\r\n          dateString,\r\n        );\r\n      case \"XXXXX\":\r\n        return parseTimezonePattern(\r\n          timezonePatterns.extendedOptionalSeconds,\r\n          dateString,\r\n        );\r\n      case \"XXX\":\r\n      default:\r\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\r\n    }\r\n  }\r\n\r\n  set(date, flags, value) {\r\n    if (flags.timestampIsSet) return date;\r\n    return constructFrom(\r\n      date,\r\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\r\n    );\r\n  }\r\n\r\n  incompatibleTokens = [\"t\", \"T\", \"x\"];\r\n}\r\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,+BAA+B,QAAQ,kDAAkD;AAClG,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,MAAM,QAAQ,cAAc;AAErC,SAASC,oBAAoB,QAAQ,aAAa;;AAElD;AACA,OAAO,MAAMC,sBAAsB,SAASF,MAAM,CAAC;EAAAG,YAAA;IAAA,SAAAC,SAAA;IAAAC,eAAA,mBACtC,EAAE;IAAAA,eAAA,6BAmCQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAAA;EAjCpCC,KAAKA,CAACC,UAAU,EAAEC,KAAK,EAAE;IACvB,QAAQA,KAAK;MACX,KAAK,GAAG;QACN,OAAOP,oBAAoB,CACzBF,gBAAgB,CAACU,oBAAoB,EACrCF,UACF,CAAC;MACH,KAAK,IAAI;QACP,OAAON,oBAAoB,CAACF,gBAAgB,CAACW,KAAK,EAAEH,UAAU,CAAC;MACjE,KAAK,MAAM;QACT,OAAON,oBAAoB,CACzBF,gBAAgB,CAACY,oBAAoB,EACrCJ,UACF,CAAC;MACH,KAAK,OAAO;QACV,OAAON,oBAAoB,CACzBF,gBAAgB,CAACa,uBAAuB,EACxCL,UACF,CAAC;MACH,KAAK,KAAK;MACV;QACE,OAAON,oBAAoB,CAACF,gBAAgB,CAACc,QAAQ,EAAEN,UAAU,CAAC;IACtE;EACF;EAEAO,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAE;IACtB,IAAID,KAAK,CAACE,cAAc,EAAE,OAAOH,IAAI;IACrC,OAAOlB,aAAa,CAClBkB,IAAI,EACJA,IAAI,CAACI,OAAO,CAAC,CAAC,GAAGrB,+BAA+B,CAACiB,IAAI,CAAC,GAAGE,KAC3D,CAAC;EACH;AAGF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}