{"ast":null,"code":"const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"menos dun segundo\",\n    other: \"menos de {{count}} segundos\"\n  },\n  xSeconds: {\n    one: \"1 segundo\",\n    other: \"{{count}} segundos\"\n  },\n  halfAMinute: \"medio minuto\",\n  lessThanXMinutes: {\n    one: \"menos dun minuto\",\n    other: \"menos de {{count}} minutos\"\n  },\n  xMinutes: {\n    one: \"1 minuto\",\n    other: \"{{count}} minutos\"\n  },\n  aboutXHours: {\n    one: \"arredor dunha hora\",\n    other: \"arredor de {{count}} horas\"\n  },\n  xHours: {\n    one: \"1 hora\",\n    other: \"{{count}} horas\"\n  },\n  xDays: {\n    one: \"1 día\",\n    other: \"{{count}} días\"\n  },\n  aboutXWeeks: {\n    one: \"arredor dunha semana\",\n    other: \"arredor de {{count}} semanas\"\n  },\n  xWeeks: {\n    one: \"1 semana\",\n    other: \"{{count}} semanas\"\n  },\n  aboutXMonths: {\n    one: \"arredor de 1 mes\",\n    other: \"arredor de {{count}} meses\"\n  },\n  xMonths: {\n    one: \"1 mes\",\n    other: \"{{count}} meses\"\n  },\n  aboutXYears: {\n    one: \"arredor dun ano\",\n    other: \"arredor de {{count}} anos\"\n  },\n  xYears: {\n    one: \"1 ano\",\n    other: \"{{count}} anos\"\n  },\n  overXYears: {\n    one: \"máis dun ano\",\n    other: \"máis de {{count}} anos\"\n  },\n  almostXYears: {\n    one: \"case un ano\",\n    other: \"case {{count}} anos\"\n  }\n};\nexport const formatDistance = (token, count, options) => {\n  let result;\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"en \" + result;\n    } else {\n      return \"hai \" + result;\n    }\n  }\n  return result;\n};","map":{"version":3,"names":["formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token","count","options","result","tokenValue","replace","String","addSuffix","comparison"],"sources":["C:/work/EMG/EMGHomePage/app/daikichi/ganttdules/node_modules/date-fns/locale/gl/_lib/formatDistance.js"],"sourcesContent":["const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"menos dun segundo\",\r\n    other: \"menos de {{count}} segundos\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 segundo\",\r\n    other: \"{{count}} segundos\",\r\n  },\r\n\r\n  halfAMinute: \"medio minuto\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"menos dun minuto\",\r\n    other: \"menos de {{count}} minutos\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 minuto\",\r\n    other: \"{{count}} minutos\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"arredor dunha hora\",\r\n    other: \"arredor de {{count}} horas\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 hora\",\r\n    other: \"{{count}} horas\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 día\",\r\n    other: \"{{count}} días\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"arredor dunha semana\",\r\n    other: \"arredor de {{count}} semanas\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 semana\",\r\n    other: \"{{count}} semanas\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"arredor de 1 mes\",\r\n    other: \"arredor de {{count}} meses\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 mes\",\r\n    other: \"{{count}} meses\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"arredor dun ano\",\r\n    other: \"arredor de {{count}} anos\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 ano\",\r\n    other: \"{{count}} anos\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"máis dun ano\",\r\n    other: \"máis de {{count}} anos\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"case un ano\",\r\n    other: \"case {{count}} anos\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"en \" + result;\r\n    } else {\r\n      return \"hai \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n"],"mappings":"AAAA,MAAMA,oBAAoB,GAAG;EAC3BC,gBAAgB,EAAE;IAChBC,GAAG,EAAE,mBAAmB;IACxBC,KAAK,EAAE;EACT,CAAC;EAEDC,QAAQ,EAAE;IACRF,GAAG,EAAE,WAAW;IAChBC,KAAK,EAAE;EACT,CAAC;EAEDE,WAAW,EAAE,cAAc;EAE3BC,gBAAgB,EAAE;IAChBJ,GAAG,EAAE,kBAAkB;IACvBC,KAAK,EAAE;EACT,CAAC;EAEDI,QAAQ,EAAE;IACRL,GAAG,EAAE,UAAU;IACfC,KAAK,EAAE;EACT,CAAC;EAEDK,WAAW,EAAE;IACXN,GAAG,EAAE,oBAAoB;IACzBC,KAAK,EAAE;EACT,CAAC;EAEDM,MAAM,EAAE;IACNP,GAAG,EAAE,QAAQ;IACbC,KAAK,EAAE;EACT,CAAC;EAEDO,KAAK,EAAE;IACLR,GAAG,EAAE,OAAO;IACZC,KAAK,EAAE;EACT,CAAC;EAEDQ,WAAW,EAAE;IACXT,GAAG,EAAE,sBAAsB;IAC3BC,KAAK,EAAE;EACT,CAAC;EAEDS,MAAM,EAAE;IACNV,GAAG,EAAE,UAAU;IACfC,KAAK,EAAE;EACT,CAAC;EAEDU,YAAY,EAAE;IACZX,GAAG,EAAE,kBAAkB;IACvBC,KAAK,EAAE;EACT,CAAC;EAEDW,OAAO,EAAE;IACPZ,GAAG,EAAE,OAAO;IACZC,KAAK,EAAE;EACT,CAAC;EAEDY,WAAW,EAAE;IACXb,GAAG,EAAE,iBAAiB;IACtBC,KAAK,EAAE;EACT,CAAC;EAEDa,MAAM,EAAE;IACNd,GAAG,EAAE,OAAO;IACZC,KAAK,EAAE;EACT,CAAC;EAEDc,UAAU,EAAE;IACVf,GAAG,EAAE,cAAc;IACnBC,KAAK,EAAE;EACT,CAAC;EAEDe,YAAY,EAAE;IACZhB,GAAG,EAAE,aAAa;IAClBC,KAAK,EAAE;EACT;AACF,CAAC;AAED,OAAO,MAAMgB,cAAc,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,OAAO,KAAK;EACvD,IAAIC,MAAM;EAEV,MAAMC,UAAU,GAAGxB,oBAAoB,CAACoB,KAAK,CAAC;EAC9C,IAAI,OAAOI,UAAU,KAAK,QAAQ,EAAE;IAClCD,MAAM,GAAGC,UAAU;EACrB,CAAC,MAAM,IAAIH,KAAK,KAAK,CAAC,EAAE;IACtBE,MAAM,GAAGC,UAAU,CAACtB,GAAG;EACzB,CAAC,MAAM;IACLqB,MAAM,GAAGC,UAAU,CAACrB,KAAK,CAACsB,OAAO,CAAC,WAAW,EAAEC,MAAM,CAACL,KAAK,CAAC,CAAC;EAC/D;EAEA,IAAIC,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEK,SAAS,EAAE;IACtB,IAAIL,OAAO,CAACM,UAAU,IAAIN,OAAO,CAACM,UAAU,GAAG,CAAC,EAAE;MAChD,OAAO,KAAK,GAAGL,MAAM;IACvB,CAAC,MAAM;MACL,OAAO,MAAM,GAAGA,MAAM;IACxB;EACF;EAEA,OAAOA,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}