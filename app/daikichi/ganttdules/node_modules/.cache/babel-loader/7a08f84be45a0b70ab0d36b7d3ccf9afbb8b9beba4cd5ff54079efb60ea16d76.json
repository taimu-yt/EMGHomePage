{"ast":null,"code":"import { isSameWeek } from \"../../../isSameWeek.js\";\nconst weekdays = [\"svētdienā\", \"pirmdienā\", \"otrdienā\", \"trešdienā\", \"ceturtdienā\", \"piektdienā\", \"sestdienā\"];\nconst formatRelativeLocale = {\n  lastWeek: (date, baseDate, options) => {\n    if (isSameWeek(date, baseDate, options)) {\n      return \"eeee 'plkst.' p\";\n    }\n    const weekday = weekdays[date.getDay()];\n    return \"'Pagājušā \" + weekday + \" plkst.' p\";\n  },\n  yesterday: \"'Vakar plkst.' p\",\n  today: \"'Šodien plkst.' p\",\n  tomorrow: \"'Rīt plkst.' p\",\n  nextWeek: (date, baseDate, options) => {\n    if (isSameWeek(date, baseDate, options)) {\n      return \"eeee 'plkst.' p\";\n    }\n    const weekday = weekdays[date.getDay()];\n    return \"'Nākamajā \" + weekday + \" plkst.' p\";\n  },\n  other: \"P\"\n};\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n  if (typeof format === \"function\") {\n    return format(date, baseDate, options);\n  }\n  return format;\n};","map":{"version":3,"names":["isSameWeek","weekdays","formatRelativeLocale","lastWeek","date","baseDate","options","weekday","getDay","yesterday","today","tomorrow","nextWeek","other","formatRelative","token","format"],"sources":["C:/work/EMG/EMGHomePage/app/daikichi/ganttdules/node_modules/date-fns/locale/lv/_lib/formatRelative.js"],"sourcesContent":["import { isSameWeek } from \"../../../isSameWeek.js\";\r\n\r\nconst weekdays = [\r\n  \"svētdienā\",\r\n  \"pirmdienā\",\r\n  \"otrdienā\",\r\n  \"trešdienā\",\r\n  \"ceturtdienā\",\r\n  \"piektdienā\",\r\n  \"sestdienā\",\r\n];\r\n\r\nconst formatRelativeLocale = {\r\n  lastWeek: (date, baseDate, options) => {\r\n    if (isSameWeek(date, baseDate, options)) {\r\n      return \"eeee 'plkst.' p\";\r\n    }\r\n\r\n    const weekday = weekdays[date.getDay()];\r\n    return \"'Pagājušā \" + weekday + \" plkst.' p\";\r\n  },\r\n  yesterday: \"'Vakar plkst.' p\",\r\n  today: \"'Šodien plkst.' p\",\r\n  tomorrow: \"'Rīt plkst.' p\",\r\n  nextWeek: (date, baseDate, options) => {\r\n    if (isSameWeek(date, baseDate, options)) {\r\n      return \"eeee 'plkst.' p\";\r\n    }\r\n\r\n    const weekday = weekdays[date.getDay()];\r\n    return \"'Nākamajā \" + weekday + \" plkst.' p\";\r\n  },\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, baseDate, options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date, baseDate, options);\r\n  }\r\n\r\n  return format;\r\n};\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,wBAAwB;AAEnD,MAAMC,QAAQ,GAAG,CACf,WAAW,EACX,WAAW,EACX,UAAU,EACV,WAAW,EACX,aAAa,EACb,YAAY,EACZ,WAAW,CACZ;AAED,MAAMC,oBAAoB,GAAG;EAC3BC,QAAQ,EAAEA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,KAAK;IACrC,IAAIN,UAAU,CAACI,IAAI,EAAEC,QAAQ,EAAEC,OAAO,CAAC,EAAE;MACvC,OAAO,iBAAiB;IAC1B;IAEA,MAAMC,OAAO,GAAGN,QAAQ,CAACG,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC;IACvC,OAAO,YAAY,GAAGD,OAAO,GAAG,YAAY;EAC9C,CAAC;EACDE,SAAS,EAAE,kBAAkB;EAC7BC,KAAK,EAAE,mBAAmB;EAC1BC,QAAQ,EAAE,gBAAgB;EAC1BC,QAAQ,EAAEA,CAACR,IAAI,EAAEC,QAAQ,EAAEC,OAAO,KAAK;IACrC,IAAIN,UAAU,CAACI,IAAI,EAAEC,QAAQ,EAAEC,OAAO,CAAC,EAAE;MACvC,OAAO,iBAAiB;IAC1B;IAEA,MAAMC,OAAO,GAAGN,QAAQ,CAACG,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC;IACvC,OAAO,YAAY,GAAGD,OAAO,GAAG,YAAY;EAC9C,CAAC;EACDM,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAACC,KAAK,EAAEX,IAAI,EAAEC,QAAQ,EAAEC,OAAO,KAAK;EAChE,MAAMU,MAAM,GAAGd,oBAAoB,CAACa,KAAK,CAAC;EAE1C,IAAI,OAAOC,MAAM,KAAK,UAAU,EAAE;IAChC,OAAOA,MAAM,CAACZ,IAAI,EAAEC,QAAQ,EAAEC,OAAO,CAAC;EACxC;EAEA,OAAOU,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}