{"ast":null,"code":"import { isSameWeek } from \"../../../isSameWeek.js\";\nconst accusativeWeekdays = [\"воскресенье\", \"понедельник\", \"вторник\", \"среду\", \"четверг\", \"пятницу\", \"субботу\"];\nfunction lastWeek(day) {\n  const weekday = accusativeWeekdays[day];\n  switch (day) {\n    case 0:\n      return \"'в прошлое \" + weekday + \" в' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'в прошлый \" + weekday + \" в' p\";\n    case 3:\n    case 5:\n    case 6:\n      return \"'в прошлую \" + weekday + \" в' p\";\n  }\n}\nfunction thisWeek(day) {\n  const weekday = accusativeWeekdays[day];\n  if (day === 2 /* Tue */) {\n    return \"'во \" + weekday + \" в' p\";\n  } else {\n    return \"'в \" + weekday + \" в' p\";\n  }\n}\nfunction nextWeek(day) {\n  const weekday = accusativeWeekdays[day];\n  switch (day) {\n    case 0:\n      return \"'в следующее \" + weekday + \" в' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'в следующий \" + weekday + \" в' p\";\n    case 3:\n    case 5:\n    case 6:\n      return \"'в следующую \" + weekday + \" в' p\";\n  }\n}\nconst formatRelativeLocale = {\n  lastWeek: (date, baseDate, options) => {\n    const day = date.getDay();\n    if (isSameWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'вчера в' p\",\n  today: \"'сегодня в' p\",\n  tomorrow: \"'завтра в' p\",\n  nextWeek: (date, baseDate, options) => {\n    const day = date.getDay();\n    if (isSameWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: \"P\"\n};\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n  if (typeof format === \"function\") {\n    return format(date, baseDate, options);\n  }\n  return format;\n};","map":{"version":3,"names":["isSameWeek","accusativeWeekdays","lastWeek","day","weekday","thisWeek","nextWeek","formatRelativeLocale","date","baseDate","options","getDay","yesterday","today","tomorrow","other","formatRelative","token","format"],"sources":["C:/work/EMG/EMGHomePage/app/daikichi/ganttdules/node_modules/date-fns/locale/ru/_lib/formatRelative.js"],"sourcesContent":["import { isSameWeek } from \"../../../isSameWeek.js\";\r\n\r\nconst accusativeWeekdays = [\r\n  \"воскресенье\",\r\n  \"понедельник\",\r\n  \"вторник\",\r\n  \"среду\",\r\n  \"четверг\",\r\n  \"пятницу\",\r\n  \"субботу\",\r\n];\r\n\r\nfunction lastWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  switch (day) {\r\n    case 0:\r\n      return \"'в прошлое \" + weekday + \" в' p\";\r\n    case 1:\r\n    case 2:\r\n    case 4:\r\n      return \"'в прошлый \" + weekday + \" в' p\";\r\n    case 3:\r\n    case 5:\r\n    case 6:\r\n      return \"'в прошлую \" + weekday + \" в' p\";\r\n  }\r\n}\r\n\r\nfunction thisWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  if (day === 2 /* Tue */) {\r\n    return \"'во \" + weekday + \" в' p\";\r\n  } else {\r\n    return \"'в \" + weekday + \" в' p\";\r\n  }\r\n}\r\n\r\nfunction nextWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  switch (day) {\r\n    case 0:\r\n      return \"'в следующее \" + weekday + \" в' p\";\r\n    case 1:\r\n    case 2:\r\n    case 4:\r\n      return \"'в следующий \" + weekday + \" в' p\";\r\n    case 3:\r\n    case 5:\r\n    case 6:\r\n      return \"'в следующую \" + weekday + \" в' p\";\r\n  }\r\n}\r\n\r\nconst formatRelativeLocale = {\r\n  lastWeek: (date, baseDate, options) => {\r\n    const day = date.getDay();\r\n    if (isSameWeek(date, baseDate, options)) {\r\n      return thisWeek(day);\r\n    } else {\r\n      return lastWeek(day);\r\n    }\r\n  },\r\n  yesterday: \"'вчера в' p\",\r\n  today: \"'сегодня в' p\",\r\n  tomorrow: \"'завтра в' p\",\r\n  nextWeek: (date, baseDate, options) => {\r\n    const day = date.getDay();\r\n    if (isSameWeek(date, baseDate, options)) {\r\n      return thisWeek(day);\r\n    } else {\r\n      return nextWeek(day);\r\n    }\r\n  },\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, baseDate, options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date, baseDate, options);\r\n  }\r\n\r\n  return format;\r\n};\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,wBAAwB;AAEnD,MAAMC,kBAAkB,GAAG,CACzB,aAAa,EACb,aAAa,EACb,SAAS,EACT,OAAO,EACP,SAAS,EACT,SAAS,EACT,SAAS,CACV;AAED,SAASC,QAAQA,CAACC,GAAG,EAAE;EACrB,MAAMC,OAAO,GAAGH,kBAAkB,CAACE,GAAG,CAAC;EAEvC,QAAQA,GAAG;IACT,KAAK,CAAC;MACJ,OAAO,aAAa,GAAGC,OAAO,GAAG,OAAO;IAC1C,KAAK,CAAC;IACN,KAAK,CAAC;IACN,KAAK,CAAC;MACJ,OAAO,aAAa,GAAGA,OAAO,GAAG,OAAO;IAC1C,KAAK,CAAC;IACN,KAAK,CAAC;IACN,KAAK,CAAC;MACJ,OAAO,aAAa,GAAGA,OAAO,GAAG,OAAO;EAC5C;AACF;AAEA,SAASC,QAAQA,CAACF,GAAG,EAAE;EACrB,MAAMC,OAAO,GAAGH,kBAAkB,CAACE,GAAG,CAAC;EAEvC,IAAIA,GAAG,KAAK,CAAC,CAAC,WAAW;IACvB,OAAO,MAAM,GAAGC,OAAO,GAAG,OAAO;EACnC,CAAC,MAAM;IACL,OAAO,KAAK,GAAGA,OAAO,GAAG,OAAO;EAClC;AACF;AAEA,SAASE,QAAQA,CAACH,GAAG,EAAE;EACrB,MAAMC,OAAO,GAAGH,kBAAkB,CAACE,GAAG,CAAC;EAEvC,QAAQA,GAAG;IACT,KAAK,CAAC;MACJ,OAAO,eAAe,GAAGC,OAAO,GAAG,OAAO;IAC5C,KAAK,CAAC;IACN,KAAK,CAAC;IACN,KAAK,CAAC;MACJ,OAAO,eAAe,GAAGA,OAAO,GAAG,OAAO;IAC5C,KAAK,CAAC;IACN,KAAK,CAAC;IACN,KAAK,CAAC;MACJ,OAAO,eAAe,GAAGA,OAAO,GAAG,OAAO;EAC9C;AACF;AAEA,MAAMG,oBAAoB,GAAG;EAC3BL,QAAQ,EAAEA,CAACM,IAAI,EAAEC,QAAQ,EAAEC,OAAO,KAAK;IACrC,MAAMP,GAAG,GAAGK,IAAI,CAACG,MAAM,CAAC,CAAC;IACzB,IAAIX,UAAU,CAACQ,IAAI,EAAEC,QAAQ,EAAEC,OAAO,CAAC,EAAE;MACvC,OAAOL,QAAQ,CAACF,GAAG,CAAC;IACtB,CAAC,MAAM;MACL,OAAOD,QAAQ,CAACC,GAAG,CAAC;IACtB;EACF,CAAC;EACDS,SAAS,EAAE,aAAa;EACxBC,KAAK,EAAE,eAAe;EACtBC,QAAQ,EAAE,cAAc;EACxBR,QAAQ,EAAEA,CAACE,IAAI,EAAEC,QAAQ,EAAEC,OAAO,KAAK;IACrC,MAAMP,GAAG,GAAGK,IAAI,CAACG,MAAM,CAAC,CAAC;IACzB,IAAIX,UAAU,CAACQ,IAAI,EAAEC,QAAQ,EAAEC,OAAO,CAAC,EAAE;MACvC,OAAOL,QAAQ,CAACF,GAAG,CAAC;IACtB,CAAC,MAAM;MACL,OAAOG,QAAQ,CAACH,GAAG,CAAC;IACtB;EACF,CAAC;EACDY,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAACC,KAAK,EAAET,IAAI,EAAEC,QAAQ,EAAEC,OAAO,KAAK;EAChE,MAAMQ,MAAM,GAAGX,oBAAoB,CAACU,KAAK,CAAC;EAE1C,IAAI,OAAOC,MAAM,KAAK,UAAU,EAAE;IAChC,OAAOA,MAAM,CAACV,IAAI,EAAEC,QAAQ,EAAEC,OAAO,CAAC;EACxC;EAEA,OAAOQ,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}