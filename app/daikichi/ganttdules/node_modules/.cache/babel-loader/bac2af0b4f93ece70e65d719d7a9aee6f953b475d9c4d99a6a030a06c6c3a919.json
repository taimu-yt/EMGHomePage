{"ast":null,"code":"var _jsxFileName = \"C:\\\\work\\\\EMG\\\\app01\\\\src\\\\components\\\\Gantt.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { parseISO, startOfMonth, endOfMonth, startOfWeek, endOfWeek, startOfDay, endOfDay, differenceInDays, differenceInHours, addDays, addHours, format, differenceInMinutes } from \"date-fns\";\nimport { ja } from \"date-fns/locale\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getRange(view, currentDate) {\n  if (view === \"month\") {\n    const start = startOfMonth(currentDate);\n    const end = endOfMonth(currentDate);\n    const days = differenceInDays(end, start) + 1;\n    const columns = Array.from({\n      length: days\n    }).map((_, i) => addDays(start, i));\n    return {\n      start,\n      end,\n      columns,\n      unit: \"day\"\n    };\n  }\n  if (view === \"week\") {\n    const start = startOfWeek(currentDate, {\n      weekStartsOn: 1\n    });\n    const end = endOfWeek(currentDate, {\n      weekStartsOn: 1\n    });\n    const days = differenceInDays(end, start) + 1;\n    const columns = Array.from({\n      length: days\n    }).map((_, i) => addDays(start, i));\n    return {\n      start,\n      end,\n      columns,\n      unit: \"day\"\n    };\n  }\n  // day view: use 24 hours\n  const start = startOfDay(currentDate);\n  const end = endOfDay(currentDate);\n  const columns = Array.from({\n    length: 24\n  }).map((_, i) => addHours(start, i));\n  return {\n    start,\n    end,\n    columns,\n    unit: \"hour\"\n  };\n}\nexport default function Gantt({\n  tasks,\n  view,\n  currentDate,\n  onTaskClick,\n  editingTaskId\n}) {\n  _s();\n  const range = getRange(view, currentDate);\n  const containerRef = useRef(null);\n  const [containerWidth, setContainerWidth] = useState(() => typeof window !== \"undefined\" ? window.innerWidth : 900);\n  useEffect(() => {\n    const measure = () => {\n      const el = containerRef.current;\n      const w = el ? el.clientWidth : typeof window !== \"undefined\" ? window.innerWidth : 900;\n      setContainerWidth(Math.max(300, w));\n    };\n    measure();\n    window.addEventListener(\"resize\", measure);\n    return () => window.removeEventListener(\"resize\", measure);\n  }, []);\n\n  // layout\n  const leftColumnWidth = 220;\n  const colCount = range.columns.length;\n  const availableForRight = Math.max(200, containerWidth - leftColumnWidth);\n  const minColWidth = range.unit === \"hour\" ? 60 : 48;\n  const desired = availableForRight / Math.max(1, colCount);\n  const colWidth = desired < minColWidth ? minColWidth : desired;\n\n  // grid template columns string: left + repeated columns\n  const gridTemplateColumns = `${leftColumnWidth}px ${Array.from({\n    length: colCount\n  }).map(() => `${colWidth}px`).join(\" \")}`;\n\n  // visible tasks (within range)\n  const rStartMs = range.start.getTime();\n  const rEndMs = range.end.getTime();\n  const visibleTasks = tasks.filter(t => {\n    try {\n      const sMs = parseISO(t.start).getTime();\n      const eMs = parseISO(t.end).getTime();\n      return eMs >= rStartMs && sMs <= rEndMs;\n    } catch {\n      return false;\n    }\n  });\n\n  // helpers to compute start/end column indices (0-based)\n  const getStartIndex = d => {\n    const dt = typeof d === \"string\" ? parseISO(d) : d;\n    if (range.unit === \"day\") return Math.max(0, differenceInDays(dt, range.start));\n    return Math.max(0, Math.floor(differenceInMinutes(dt, range.start) / 60));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gantt-excel\",\n    ref: containerRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"excel-grid\",\n      style: {\n        display: \"grid\",\n        gridTemplateColumns,\n        gridAutoRows: \"56px\",\n        border: \"1px solid #eee\",\n        borderRadius: 6,\n        overflow: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell header-left\",\n        style: {\n          borderRight: \"1px solid #f0f0f0\",\n          background: \"#fff\",\n          gridColumn: 1,\n          gridRow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), range.columns.map((col, ci) => {\n        const day = col.getDay();\n        const isSat = day === 6;\n        const isSun = day === 0;\n        const label = range.unit === \"day\" ? format(col, \"MM/dd (EEE)\", {\n          locale: ja\n        }) : format(col, \"HH:00\");\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cell header ${isSat ? \"sat\" : isSun ? \"sun\" : \"\"}`,\n          style: {\n            borderRight: \"1px solid #f4f4f4\",\n            textAlign: \"center\",\n            padding: 8,\n            boxSizing: \"border-box\",\n            gridColumn: ci + 2,\n            gridRow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: isSat ? \"#1976d2\" : isSun ? \"#e53935\" : \"inherit\"\n            },\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, ci, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this);\n      }), visibleTasks.map((t, rowIndex) => {\n        const start = parseISO(t.start);\n        const end = parseISO(t.end);\n        const startClamped = start < range.start ? range.start : start;\n        const endClamped = end > range.end ? range.end : end;\n        const startIdx = getStartIndex(startClamped);\n        const endIdx = range.unit === \"day\" ? Math.min(colCount, differenceInDays(endClamped, range.start) + 1) : Math.min(colCount, Math.ceil(differenceInMinutes(endClamped, range.start) / 60) + 1);\n        const isSelected = editingTaskId && editingTaskId === t.id;\n        const gridRowIndex = rowIndex + 2; // header row is 1\n\n        // left title cell (explicit grid placement)\n        const leftCell = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cell left-cell ${isSelected ? \"selected\" : \"\"}`,\n          onClick: () => onTaskClick && onTaskClick(t),\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            padding: \"8px 12px\",\n            borderRight: \"1px solid #f4f4f4\",\n            boxSizing: \"border-box\",\n            cursor: \"pointer\",\n            background: isSelected ? \"rgba(25,118,210,0.04)\" : \"#fff\",\n            gridColumn: 1,\n            gridRow: gridRowIndex\n          },\n          title: t.description || \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-title\",\n            style: {\n              fontWeight: 700,\n              whiteSpace: \"nowrap\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\"\n            },\n            children: t.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-date\",\n            style: {\n              fontSize: 12,\n              opacity: 0.9,\n              marginTop: 4\n            },\n            children: range.unit === \"hour\" ? format(start, \"MM/dd HH:mm\", {\n              locale: ja\n            }) : format(start, \"MM/dd\", {\n              locale: ja\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, `left-${t.id}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this);\n\n        // right-side empty cells (explicit placement per column)\n        const gridCells = range.columns.map((_, ci) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell grid-cell\",\n          style: {\n            borderRight: \"1px solid #f7f7f7\",\n            boxSizing: \"border-box\",\n            gridColumn: ci + 2,\n            gridRow: gridRowIndex\n          }\n        }, `cell-${t.id}-${ci}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this));\n\n        // task bar positioned by grid column start/end and grid row\n        const taskBar = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `task-bar${isSelected ? \" selected\" : \"\"}`,\n          style: {\n            gridColumn: `${startIdx + 2} / ${endIdx + 2}`,\n            // left col is 1, data cols start at 2\n            gridRow: gridRowIndex,\n            alignSelf: \"center\",\n            height: 32,\n            borderRadius: 6,\n            background: t.color,\n            boxShadow: isSelected ? \"0 6px 14px rgba(0,0,0,0.12)\" : \"none\",\n            cursor: \"pointer\",\n            zIndex: 5\n          },\n          onClick: () => onTaskClick && onTaskClick(t),\n          title: `${t.title}\\n${t.description || \"\"}\\n${format(start, \"yyyy-MM-dd HH:mm\", {\n            locale: ja\n          })} - ${format(end, \"yyyy-MM-dd HH:mm\", {\n            locale: ja\n          })}`\n        }, `bar-${t.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this);\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [leftCell, gridCells, taskBar]\n        }, t.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(Gantt, \"s6ZPSem0IK0/uKJZNtNUOn8rnFA=\");\n_c = Gantt;\nvar _c;\n$RefreshReg$(_c, \"Gantt\");","map":{"version":3,"names":["React","useRef","useState","useEffect","parseISO","startOfMonth","endOfMonth","startOfWeek","endOfWeek","startOfDay","endOfDay","differenceInDays","differenceInHours","addDays","addHours","format","differenceInMinutes","ja","jsxDEV","_jsxDEV","getRange","view","currentDate","start","end","days","columns","Array","from","length","map","_","i","unit","weekStartsOn","Gantt","tasks","onTaskClick","editingTaskId","_s","range","containerRef","containerWidth","setContainerWidth","window","innerWidth","measure","el","current","w","clientWidth","Math","max","addEventListener","removeEventListener","leftColumnWidth","colCount","availableForRight","minColWidth","desired","colWidth","gridTemplateColumns","join","rStartMs","getTime","rEndMs","visibleTasks","filter","t","sMs","eMs","getStartIndex","d","dt","floor","className","ref","children","style","display","gridAutoRows","border","borderRadius","overflow","borderRight","background","gridColumn","gridRow","fileName","_jsxFileName","lineNumber","columnNumber","col","ci","day","getDay","isSat","isSun","label","locale","textAlign","padding","boxSizing","fontSize","color","rowIndex","startClamped","endClamped","startIdx","endIdx","min","ceil","isSelected","id","gridRowIndex","leftCell","onClick","flexDirection","justifyContent","cursor","title","description","fontWeight","whiteSpace","textOverflow","opacity","marginTop","gridCells","taskBar","alignSelf","height","boxShadow","zIndex","Fragment","_c","$RefreshReg$"],"sources":["C:/work/EMG/app01/src/components/Gantt.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport {\r\n  parseISO,\r\n  startOfMonth,\r\n  endOfMonth,\r\n  startOfWeek,\r\n  endOfWeek,\r\n  startOfDay,\r\n  endOfDay,\r\n  differenceInDays,\r\n  differenceInHours,\r\n  addDays,\r\n  addHours,\r\n  format,\r\n  differenceInMinutes,\r\n} from \"date-fns\";\r\nimport { ja } from \"date-fns/locale\";\r\n\r\nfunction getRange(view, currentDate) {\r\n  if (view === \"month\") {\r\n    const start = startOfMonth(currentDate);\r\n    const end = endOfMonth(currentDate);\r\n    const days = differenceInDays(end, start) + 1;\r\n    const columns = Array.from({ length: days }).map((_, i) => addDays(start, i));\r\n    return { start, end, columns, unit: \"day\" };\r\n  }\r\n  if (view === \"week\") {\r\n    const start = startOfWeek(currentDate, { weekStartsOn: 1 });\r\n    const end = endOfWeek(currentDate, { weekStartsOn: 1 });\r\n    const days = differenceInDays(end, start) + 1;\r\n    const columns = Array.from({ length: days }).map((_, i) => addDays(start, i));\r\n    return { start, end, columns, unit: \"day\" };\r\n  }\r\n  // day view: use 24 hours\r\n  const start = startOfDay(currentDate);\r\n  const end = endOfDay(currentDate);\r\n  const columns = Array.from({ length: 24 }).map((_, i) => addHours(start, i));\r\n  return { start, end, columns, unit: \"hour\" };\r\n}\r\n\r\nexport default function Gantt({ tasks, view, currentDate, onTaskClick, editingTaskId }) {\r\n  const range = getRange(view, currentDate);\r\n\r\n  const containerRef = useRef(null);\r\n  const [containerWidth, setContainerWidth] = useState(() => (typeof window !== \"undefined\" ? window.innerWidth : 900));\r\n\r\n  useEffect(() => {\r\n    const measure = () => {\r\n      const el = containerRef.current;\r\n      const w = el ? el.clientWidth : (typeof window !== \"undefined\" ? window.innerWidth : 900);\r\n      setContainerWidth(Math.max(300, w));\r\n    };\r\n    measure();\r\n    window.addEventListener(\"resize\", measure);\r\n    return () => window.removeEventListener(\"resize\", measure);\r\n  }, []);\r\n\r\n  // layout\r\n  const leftColumnWidth = 220;\r\n  const colCount = range.columns.length;\r\n  const availableForRight = Math.max(200, containerWidth - leftColumnWidth);\r\n  const minColWidth = range.unit === \"hour\" ? 60 : 48;\r\n  const desired = availableForRight / Math.max(1, colCount);\r\n  const colWidth = desired < minColWidth ? minColWidth : desired;\r\n\r\n  // grid template columns string: left + repeated columns\r\n  const gridTemplateColumns = `${leftColumnWidth}px ${Array.from({ length: colCount }).map(() => `${colWidth}px`).join(\" \")}`;\r\n\r\n  // visible tasks (within range)\r\n  const rStartMs = range.start.getTime();\r\n  const rEndMs = range.end.getTime();\r\n  const visibleTasks = tasks.filter((t) => {\r\n    try {\r\n      const sMs = parseISO(t.start).getTime();\r\n      const eMs = parseISO(t.end).getTime();\r\n      return eMs >= rStartMs && sMs <= rEndMs;\r\n    } catch {\r\n      return false;\r\n    }\r\n  });\r\n\r\n  // helpers to compute start/end column indices (0-based)\r\n  const getStartIndex = (d) => {\r\n    const dt = typeof d === \"string\" ? parseISO(d) : d;\r\n    if (range.unit === \"day\") return Math.max(0, differenceInDays(dt, range.start));\r\n    return Math.max(0, Math.floor(differenceInMinutes(dt, range.start) / 60));\r\n  };\r\n\r\n  return (\r\n    <div className=\"gantt-excel\" ref={containerRef}>\r\n      {/* grid container: header + rows */}\r\n      <div\r\n        className=\"excel-grid\"\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns,\r\n          gridAutoRows: \"56px\",\r\n          border: \"1px solid #eee\",\r\n          borderRadius: 6,\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        {/* header: left empty cell (explicit placement) */}\r\n        <div\r\n          className=\"cell header-left\"\r\n          style={{ borderRight: \"1px solid #f0f0f0\", background: \"#fff\", gridColumn: 1, gridRow: 1 }}\r\n        />\r\n\r\n        {range.columns.map((col, ci) => {\r\n          const day = col.getDay();\r\n          const isSat = day === 6;\r\n          const isSun = day === 0;\r\n          const label = range.unit === \"day\" ? format(col, \"MM/dd (EEE)\", { locale: ja }) : format(col, \"HH:00\");\r\n          return (\r\n            <div\r\n              key={ci}\r\n              className={`cell header ${isSat ? \"sat\" : isSun ? \"sun\" : \"\"}`}\r\n              style={{\r\n                borderRight: \"1px solid #f4f4f4\",\r\n                textAlign: \"center\",\r\n                padding: 8,\r\n                boxSizing: \"border-box\",\r\n                gridColumn: ci + 2,\r\n                gridRow: 1,\r\n              }}\r\n            >\r\n              <div style={{ fontSize: 12, color: isSat ? \"#1976d2\" : isSun ? \"#e53935\" : \"inherit\" }}>{label}</div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        {/* rows: explicitly place left title cell + each grid cell + task bar using grid coordinates */}\r\n        {visibleTasks.map((t, rowIndex) => {\r\n          const start = parseISO(t.start);\r\n          const end = parseISO(t.end);\r\n          const startClamped = start < range.start ? range.start : start;\r\n          const endClamped = end > range.end ? range.end : end;\r\n\r\n          const startIdx = getStartIndex(startClamped);\r\n          const endIdx =\r\n            range.unit === \"day\"\r\n              ? Math.min(colCount, differenceInDays(endClamped, range.start) + 1)\r\n              : Math.min(colCount, Math.ceil(differenceInMinutes(endClamped, range.start) / 60) + 1);\r\n\r\n          const isSelected = editingTaskId && editingTaskId === t.id;\r\n          const gridRowIndex = rowIndex + 2; // header row is 1\r\n\r\n          // left title cell (explicit grid placement)\r\n          const leftCell = (\r\n            <div\r\n              key={`left-${t.id}`}\r\n              className={`cell left-cell ${isSelected ? \"selected\" : \"\"}`}\r\n              onClick={() => onTaskClick && onTaskClick(t)}\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                padding: \"8px 12px\",\r\n                borderRight: \"1px solid #f4f4f4\",\r\n                boxSizing: \"border-box\",\r\n                cursor: \"pointer\",\r\n                background: isSelected ? \"rgba(25,118,210,0.04)\" : \"#fff\",\r\n                gridColumn: 1,\r\n                gridRow: gridRowIndex,\r\n              }}\r\n              title={t.description || \"\"}\r\n            >\r\n              <div className=\"left-title\" style={{ fontWeight: 700, whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\" }}>{t.title}</div>\r\n              <div className=\"left-date\" style={{ fontSize: 12, opacity: 0.9, marginTop: 4 }}>\r\n                {range.unit === \"hour\" ? format(start, \"MM/dd HH:mm\", { locale: ja }) : format(start, \"MM/dd\", { locale: ja })}\r\n              </div>\r\n            </div>\r\n          );\r\n\r\n          // right-side empty cells (explicit placement per column)\r\n          const gridCells = range.columns.map((_, ci) => (\r\n            <div\r\n              key={`cell-${t.id}-${ci}`}\r\n              className=\"cell grid-cell\"\r\n              style={{\r\n                borderRight: \"1px solid #f7f7f7\",\r\n                boxSizing: \"border-box\",\r\n                gridColumn: ci + 2,\r\n                gridRow: gridRowIndex,\r\n              }}\r\n            />\r\n          ));\r\n\r\n          // task bar positioned by grid column start/end and grid row\r\n          const taskBar = (\r\n            <div\r\n              key={`bar-${t.id}`}\r\n              className={`task-bar${isSelected ? \" selected\" : \"\"}`}\r\n              style={{\r\n                gridColumn: `${startIdx + 2} / ${endIdx + 2}`, // left col is 1, data cols start at 2\r\n                gridRow: gridRowIndex,\r\n                alignSelf: \"center\",\r\n                height: 32,\r\n                borderRadius: 6,\r\n                background: t.color,\r\n                boxShadow: isSelected ? \"0 6px 14px rgba(0,0,0,0.12)\" : \"none\",\r\n                cursor: \"pointer\",\r\n                zIndex: 5,\r\n              }}\r\n              onClick={() => onTaskClick && onTaskClick(t)}\r\n              title={`${t.title}\\n${t.description || \"\"}\\n${format(start, \"yyyy-MM-dd HH:mm\", { locale: ja })} - ${format(end, \"yyyy-MM-dd HH:mm\", { locale: ja })}`}\r\n            />\r\n          );\r\n\r\n          return (\r\n            <React.Fragment key={t.id}>\r\n              {leftCell}\r\n              {gridCells}\r\n              {taskBar}\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}