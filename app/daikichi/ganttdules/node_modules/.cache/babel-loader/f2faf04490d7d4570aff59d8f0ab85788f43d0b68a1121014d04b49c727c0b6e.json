{"ast":null,"code":"import _objectSpread from\"C:/work/EMG/EMGHomePage/app/daikichi/ganttdules/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useRef,useState,useEffect}from\"react\";import{parseISO,startOfMonth,endOfMonth,startOfWeek,endOfWeek,startOfDay,endOfDay,differenceInDays,differenceInHours,addDays,addHours,format,differenceInMinutes}from\"date-fns\";import{ja}from\"date-fns/locale\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function getRange(view,currentDate){if(view===\"month\"){const start=startOfMonth(currentDate);const end=endOfMonth(currentDate);const days=differenceInDays(end,start)+1;const columns=Array.from({length:days}).map((_,i)=>addDays(start,i));return{start,end,columns,unit:\"day\"};}if(view===\"week\"){const start=startOfWeek(currentDate,{weekStartsOn:1});const end=endOfWeek(currentDate,{weekStartsOn:1});const days=differenceInDays(end,start)+1;const columns=Array.from({length:days}).map((_,i)=>addDays(start,i));return{start,end,columns,unit:\"day\"};}const start=startOfDay(currentDate);const end=endOfDay(currentDate);const columns=Array.from({length:24}).map((_,i)=>addHours(start,i));return{start,end,columns,unit:\"hour\"};}export default function Gantt(_ref){let{tasks,view,currentDate,onTaskClick,editingTaskId,onTaskUpdate}=_ref;const range=getRange(view,currentDate);const containerRef=useRef(null);const gridRef=useRef(null);const[containerWidth,setContainerWidth]=useState(()=>typeof window!==\"undefined\"?window.innerWidth:900);useEffect(()=>{const measure=()=>{const el=containerRef.current;const w=el?el.clientWidth:typeof window!==\"undefined\"?window.innerWidth:900;setContainerWidth(Math.max(300,w));};measure();window.addEventListener(\"resize\",measure);return()=>window.removeEventListener(\"resize\",measure);},[]);// layout\nconst leftColumnWidth=220;const colCount=range.columns.length;const availableForRight=Math.max(200,containerWidth-leftColumnWidth);const minColWidth=range.unit===\"hour\"?60:48;const desired=availableForRight/Math.max(1,colCount);const colWidth=desired<minColWidth?minColWidth:desired;// grid template columns string: left + repeated columns\nconst gridTemplateColumns=\"\".concat(leftColumnWidth,\"px \").concat(Array.from({length:colCount}).map(()=>\"\".concat(colWidth,\"px\")).join(\" \"));// visible tasks (within range)\nconst rStartMs=range.start.getTime();const rEndMs=range.end.getTime();const visibleTasks=tasks.filter(t=>{try{const sMs=parseISO(t.start).getTime();const eMs=parseISO(t.end).getTime();return eMs>=rStartMs&&sMs<=rEndMs;}catch(_unused){return false;}});// helpers to compute start/end column indices (0-based)\nconst getStartIndex=d=>{const dt=typeof d===\"string\"?parseISO(d):d;if(range.unit===\"day\")return Math.max(0,differenceInDays(dt,range.start));return Math.max(0,Math.floor(differenceInMinutes(dt,range.start)/60));};const getEndIndexExclusiveBetter=d=>{const dt=typeof d===\"string\"?parseISO(d):d;if(range.unit===\"day\")return Math.min(colCount,differenceInDays(dt,range.start)+1);return Math.min(colCount,Math.ceil(differenceInMinutes(dt,range.start)/60)+1);};// drag/resize state (preview shown)\nconst[previewMap,setPreviewMap]=useState({});// taskId -> {startIdx, endIdx}\nconst draggingRef=useRef(null);// {type, taskId, origStartIdx, origEndIdx, pointerX0}\nuseEffect(()=>{const handleMove=ev=>{var _ref2,_ev$clientX;if(!draggingRef.current)return;ev.preventDefault();const{type,taskId,origStartIdx,origEndIdx,pointerX0}=draggingRef.current;const clientX=(_ref2=(_ev$clientX=ev.clientX)!==null&&_ev$clientX!==void 0?_ev$clientX:ev.touches&&ev.touches[0]&&ev.touches[0].clientX)!==null&&_ref2!==void 0?_ref2:0;const gridEl=gridRef.current;if(!gridEl)return;const gridRect=gridEl.getBoundingClientRect();const deltaPx=clientX-pointerX0;const deltaCols=Math.round(deltaPx/colWidth);let newStart=origStartIdx;let newEnd=origEndIdx;if(type===\"move\"){newStart=Math.max(0,Math.min(colCount-1,origStartIdx+deltaCols));newEnd=Math.max(newStart+1,Math.min(colCount,origEndIdx+deltaCols));}else if(type===\"resize-left\"){newStart=Math.max(0,Math.min(origEndIdx-1,origStartIdx+deltaCols));}else if(type===\"resize-right\"){newEnd=Math.max(origStartIdx+1,Math.min(colCount,origEndIdx+deltaCols));}setPreviewMap(p=>_objectSpread(_objectSpread({},p),{},{[taskId]:{startIdx:newStart,endIdx:newEnd}}));};const handleUp=ev=>{if(!draggingRef.current)return;ev.preventDefault();const{taskId}=draggingRef.current;const preview=previewMap[taskId];const t=tasks.find(x=>x.id===taskId);if(preview&&t){// compute new dates based on preview indices\nlet newStartDate,newEndDate;if(range.unit===\"day\"){newStartDate=format(addDays(range.start,preview.startIdx),\"yyyy-MM-dd\");// end index is exclusive -> set end to endIdx-1\nnewEndDate=format(addDays(range.start,preview.endIdx-1),\"yyyy-MM-dd\");}else{const s=addHours(range.start,preview.startIdx);const e=addHours(range.start,preview.endIdx-1);newStartDate=format(s,\"yyyy-MM-dd'T'HH':'00\");newEndDate=format(e,\"yyyy-MM-dd'T'HH':'00\");}// call parent update\nonTaskUpdate&&onTaskUpdate(_objectSpread(_objectSpread({},t),{},{start:newStartDate,end:newEndDate}));}// clear\ndraggingRef.current=null;setPreviewMap(p=>{const np=_objectSpread({},p);delete np[taskId];return np;});window.removeEventListener(\"pointermove\",handleMove);window.removeEventListener(\"pointerup\",handleUp);};if(draggingRef.current){window.addEventListener(\"pointermove\",handleMove,{passive:false});window.addEventListener(\"pointerup\",handleUp,{passive:false});}return()=>{window.removeEventListener(\"pointermove\",handleMove);window.removeEventListener(\"pointerup\",handleUp);};},[previewMap,tasks,colWidth,onTaskUpdate,range,colCount]);// pointer down starter\nconst startDrag=(ev,type,taskId,origStartIdx,origEndIdx)=>{var _ref3,_ev$clientX2;ev.preventDefault();const clientX=(_ref3=(_ev$clientX2=ev.clientX)!==null&&_ev$clientX2!==void 0?_ev$clientX2:ev.touches&&ev.touches[0]&&ev.touches[0].clientX)!==null&&_ref3!==void 0?_ref3:0;draggingRef.current={type,taskId,origStartIdx,origEndIdx,pointerX0:clientX};// set initial preview\nsetPreviewMap(p=>_objectSpread(_objectSpread({},p),{},{[taskId]:{startIdx:origStartIdx,endIdx:origEndIdx}}));// ensure listeners are added via effect\n};return/*#__PURE__*/_jsx(\"div\",{className:\"gantt-excel\",ref:containerRef,children:/*#__PURE__*/_jsxs(\"div\",{className:\"excel-grid\",ref:gridRef,style:{display:\"grid\",gridTemplateColumns,gridAutoRows:\"56px\",border:\"1px solid #eee\",borderRadius:6,overflow:\"auto\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"cell header-left\",style:{borderRight:\"1px solid #f0f0f0\",background:\"#fff\"}}),range.columns.map((col,ci)=>{const day=col.getDay();const isSat=day===6;const isSun=day===0;const label=range.unit===\"day\"?format(col,\"MM/dd (EEE)\",{locale:ja}):format(col,\"HH:00\");return/*#__PURE__*/_jsx(\"div\",{className:\"cell header \".concat(isSat?\"sat\":isSun?\"sun\":\"\"),style:{borderRight:\"1px solid #f4f4f4\",textAlign:\"center\",padding:8,boxSizing:\"border-box\"},children:/*#__PURE__*/_jsx(\"div\",{style:{fontSize:12,color:isSat?\"#1976d2\":isSun?\"#e53935\":\"inherit\"},children:label})},ci);}),visibleTasks.map((t,rowIndex)=>{const start=parseISO(t.start);const end=parseISO(t.end);const startClamped=start<range.start?range.start:start;const endClamped=end>range.end?range.end:end;const startIdx=getStartIndex(startClamped);// compute endIdx exclusive: for day view just +1; for hour view ensure at least 1\nconst endIdx=range.unit===\"day\"?Math.min(colCount,differenceInDays(endClamped,range.start)+1):Math.min(colCount,Math.ceil(differenceInMinutes(endClamped,range.start)/60)+1);// left title cell\nconst isSelected=editingTaskId&&editingTaskId===t.id;const gridRowIndex=rowIndex+2;// header is row 1, tasks start at row 2\nreturn/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cell left-cell \".concat(isSelected?\"selected\":\"\"),onClick:()=>onTaskClick&&onTaskClick(t),style:{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",padding:\"8px 12px\",borderRight:\"1px solid #f4f4f4\",boxSizing:\"border-box\",cursor:\"pointer\",background:isSelected?\"rgba(25,118,210,0.04)\":\"#fff\",gridColumn:1,gridRow:gridRowIndex},title:t.description||\"\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"left-title\",style:{fontWeight:700,whiteSpace:\"nowrap\",overflow:\"hidden\",textOverflow:\"ellipsis\"},children:t.title}),Array.isArray(t.members)&&t.members.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"left-members\",style:{fontSize:12,color:\"#555\",marginTop:6,whiteSpace:\"nowrap\",overflow:\"hidden\",textOverflow:\"ellipsis\"},children:t.members.join(\", \")})]}),range.columns.map((_,ci)=>/*#__PURE__*/_jsx(\"div\",{className:\"cell grid-cell\",style:{borderRight:\"1px solid #f7f7f7\",boxSizing:\"border-box\",gridColumn:ci+2,gridRow:gridRowIndex}},ci)),/*#__PURE__*/_jsxs(\"div\",{className:\"task-bar\".concat(isSelected?\" selected\":\"\"),style:{gridColumn:\"\".concat(startIdx+2,\" / \").concat(endIdx+2),// data columns start at 2\ngridRow:gridRowIndex,alignSelf:\"center\",height:32,borderRadius:6,background:t.color,boxShadow:isSelected?\"0 6px 14px rgba(0,0,0,0.12)\":\"none\",cursor:\"pointer\",position:\"relative\"},onPointerDown:e=>{// don't start move if started on handle: handle will call its own\nconst tgt=e.target;if(tgt&&typeof HTMLElement!==\"undefined\"&&tgt instanceof HTMLElement&&tgt.dataset&&tgt.dataset.handle){return;}startDrag(e,\"move\",t.id,startIdx,endIdx);},onClick:()=>onTaskClick&&onTaskClick(t),title:\"\".concat(t.title,\"\\n\").concat(t.description||\"\",\"\\n\").concat(format(start,\"yyyy-MM-dd HH:mm\",{locale:ja}),\" - \").concat(format(end,\"yyyy-MM-dd HH:mm\",{locale:ja})),children:[/*#__PURE__*/_jsx(\"div\",{\"data-handle\":\"left\",onPointerDown:e=>{e.stopPropagation();startDrag(e,\"resize-left\",t.id,startIdx,endIdx);},style:{position:\"absolute\",left:0,top:0,bottom:0,width:10,cursor:\"ew-resize\",zIndex:6}}),/*#__PURE__*/_jsx(\"div\",{\"data-handle\":\"right\",onPointerDown:e=>{e.stopPropagation();startDrag(e,\"resize-right\",t.id,startIdx,endIdx);},style:{position:\"absolute\",right:0,top:0,bottom:0,width:10,cursor:\"ew-resize\",zIndex:6}})]})]},t.id);})]})});}","map":{"version":3,"names":["React","useRef","useState","useEffect","parseISO","startOfMonth","endOfMonth","startOfWeek","endOfWeek","startOfDay","endOfDay","differenceInDays","differenceInHours","addDays","addHours","format","differenceInMinutes","ja","jsx","_jsx","jsxs","_jsxs","getRange","view","currentDate","start","end","days","columns","Array","from","length","map","_","i","unit","weekStartsOn","Gantt","_ref","tasks","onTaskClick","editingTaskId","onTaskUpdate","range","containerRef","gridRef","containerWidth","setContainerWidth","window","innerWidth","measure","el","current","w","clientWidth","Math","max","addEventListener","removeEventListener","leftColumnWidth","colCount","availableForRight","minColWidth","desired","colWidth","gridTemplateColumns","concat","join","rStartMs","getTime","rEndMs","visibleTasks","filter","t","sMs","eMs","_unused","getStartIndex","d","dt","floor","getEndIndexExclusiveBetter","min","ceil","previewMap","setPreviewMap","draggingRef","handleMove","ev","_ref2","_ev$clientX","preventDefault","type","taskId","origStartIdx","origEndIdx","pointerX0","clientX","touches","gridEl","gridRect","getBoundingClientRect","deltaPx","deltaCols","round","newStart","newEnd","p","_objectSpread","startIdx","endIdx","handleUp","preview","find","x","id","newStartDate","newEndDate","s","e","np","passive","startDrag","_ref3","_ev$clientX2","className","ref","children","style","display","gridAutoRows","border","borderRadius","overflow","borderRight","background","col","ci","day","getDay","isSat","isSun","label","locale","textAlign","padding","boxSizing","fontSize","color","rowIndex","startClamped","endClamped","isSelected","gridRowIndex","Fragment","onClick","flexDirection","justifyContent","cursor","gridColumn","gridRow","title","description","fontWeight","whiteSpace","textOverflow","isArray","members","marginTop","alignSelf","height","boxShadow","position","onPointerDown","tgt","target","HTMLElement","dataset","handle","stopPropagation","left","top","bottom","width","zIndex","right"],"sources":["C:/work/EMG/EMGHomePage/app/daikichi/ganttdules/src/components/Gantt.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport {\r\n  parseISO,\r\n  startOfMonth,\r\n  endOfMonth,\r\n  startOfWeek,\r\n  endOfWeek,\r\n  startOfDay,\r\n  endOfDay,\r\n  differenceInDays,\r\n  differenceInHours,\r\n  addDays,\r\n  addHours,\r\n  format,\r\n  differenceInMinutes,\r\n} from \"date-fns\";\r\nimport { ja } from \"date-fns/locale\";\r\n\r\nfunction getRange(view, currentDate) {\r\n  if (view === \"month\") {\r\n    const start = startOfMonth(currentDate);\r\n    const end = endOfMonth(currentDate);\r\n    const days = differenceInDays(end, start) + 1;\r\n    const columns = Array.from({ length: days }).map((_, i) => addDays(start, i));\r\n    return { start, end, columns, unit: \"day\" };\r\n  }\r\n  if (view === \"week\") {\r\n    const start = startOfWeek(currentDate, { weekStartsOn: 1 });\r\n    const end = endOfWeek(currentDate, { weekStartsOn: 1 });\r\n    const days = differenceInDays(end, start) + 1;\r\n    const columns = Array.from({ length: days }).map((_, i) => addDays(start, i));\r\n    return { start, end, columns, unit: \"day\" };\r\n  }\r\n  const start = startOfDay(currentDate);\r\n  const end = endOfDay(currentDate);\r\n  const columns = Array.from({ length: 24 }).map((_, i) => addHours(start, i));\r\n  return { start, end, columns, unit: \"hour\" };\r\n}\r\n\r\nexport default function Gantt({ tasks, view, currentDate, onTaskClick, editingTaskId, onTaskUpdate }) {\r\n  const range = getRange(view, currentDate);\r\n\r\n  const containerRef = useRef(null);\r\n  const gridRef = useRef(null);\r\n  const [containerWidth, setContainerWidth] = useState(() => (typeof window !== \"undefined\" ? window.innerWidth : 900));\r\n\r\n  useEffect(() => {\r\n    const measure = () => {\r\n      const el = containerRef.current;\r\n      const w = el ? el.clientWidth : (typeof window !== \"undefined\" ? window.innerWidth : 900);\r\n      setContainerWidth(Math.max(300, w));\r\n    };\r\n    measure();\r\n    window.addEventListener(\"resize\", measure);\r\n    return () => window.removeEventListener(\"resize\", measure);\r\n  }, []);\r\n\r\n  // layout\r\n  const leftColumnWidth = 220;\r\n  const colCount = range.columns.length;\r\n  const availableForRight = Math.max(200, containerWidth - leftColumnWidth);\r\n  const minColWidth = range.unit === \"hour\" ? 60 : 48;\r\n  const desired = availableForRight / Math.max(1, colCount);\r\n  const colWidth = desired < minColWidth ? minColWidth : desired;\r\n\r\n  // grid template columns string: left + repeated columns\r\n  const gridTemplateColumns = `${leftColumnWidth}px ${Array.from({ length: colCount }).map(() => `${colWidth}px`).join(\" \")}`;\r\n\r\n  // visible tasks (within range)\r\n  const rStartMs = range.start.getTime();\r\n  const rEndMs = range.end.getTime();\r\n  const visibleTasks = tasks.filter((t) => {\r\n    try {\r\n      const sMs = parseISO(t.start).getTime();\r\n      const eMs = parseISO(t.end).getTime();\r\n      return eMs >= rStartMs && sMs <= rEndMs;\r\n    } catch {\r\n      return false;\r\n    }\r\n  });\r\n\r\n  // helpers to compute start/end column indices (0-based)\r\n  const getStartIndex = (d) => {\r\n    const dt = typeof d === \"string\" ? parseISO(d) : d;\r\n    if (range.unit === \"day\") return Math.max(0, differenceInDays(dt, range.start));\r\n    return Math.max(0, Math.floor(differenceInMinutes(dt, range.start) / 60));\r\n  };\r\n\r\n  const getEndIndexExclusiveBetter = (d) => {\r\n    const dt = typeof d === \"string\" ? parseISO(d) : d;\r\n    if (range.unit === \"day\") return Math.min(colCount, differenceInDays(dt, range.start) + 1);\r\n    return Math.min(colCount, Math.ceil(differenceInMinutes(dt, range.start) / 60) + 1);\r\n  };\r\n\r\n  // drag/resize state (preview shown)\r\n  const [previewMap, setPreviewMap] = useState({}); // taskId -> {startIdx, endIdx}\r\n  const draggingRef = useRef(null); // {type, taskId, origStartIdx, origEndIdx, pointerX0}\r\n\r\n  useEffect(() => {\r\n    const handleMove = (ev) => {\r\n      if (!draggingRef.current) return;\r\n      ev.preventDefault();\r\n      const { type, taskId, origStartIdx, origEndIdx, pointerX0 } = draggingRef.current;\r\n      const clientX = ev.clientX ?? (ev.touches && ev.touches[0] && ev.touches[0].clientX) ?? 0;\r\n      const gridEl = gridRef.current;\r\n      if (!gridEl) return;\r\n      const gridRect = gridEl.getBoundingClientRect();\r\n      const deltaPx = clientX - pointerX0;\r\n      const deltaCols = Math.round(deltaPx / colWidth);\r\n\r\n      let newStart = origStartIdx;\r\n      let newEnd = origEndIdx;\r\n      if (type === \"move\") {\r\n        newStart = Math.max(0, Math.min(colCount - 1, origStartIdx + deltaCols));\r\n        newEnd = Math.max(newStart + 1, Math.min(colCount, origEndIdx + deltaCols));\r\n      } else if (type === \"resize-left\") {\r\n        newStart = Math.max(0, Math.min(origEndIdx - 1, origStartIdx + deltaCols));\r\n      } else if (type === \"resize-right\") {\r\n        newEnd = Math.max(origStartIdx + 1, Math.min(colCount, origEndIdx + deltaCols));\r\n      }\r\n\r\n      setPreviewMap((p) => ({ ...p, [taskId]: { startIdx: newStart, endIdx: newEnd } }));\r\n    };\r\n\r\n    const handleUp = (ev) => {\r\n      if (!draggingRef.current) return;\r\n      ev.preventDefault();\r\n      const { taskId } = draggingRef.current;\r\n      const preview = previewMap[taskId];\r\n      const t = tasks.find((x) => x.id === taskId);\r\n      if (preview && t) {\r\n        // compute new dates based on preview indices\r\n        let newStartDate, newEndDate;\r\n        if (range.unit === \"day\") {\r\n          newStartDate = format(addDays(range.start, preview.startIdx), \"yyyy-MM-dd\");\r\n          // end index is exclusive -> set end to endIdx-1\r\n          newEndDate = format(addDays(range.start, preview.endIdx - 1), \"yyyy-MM-dd\");\r\n        } else {\r\n          const s = addHours(range.start, preview.startIdx);\r\n          const e = addHours(range.start, preview.endIdx - 1);\r\n          newStartDate = format(s, \"yyyy-MM-dd'T'HH':'00\");\r\n          newEndDate = format(e, \"yyyy-MM-dd'T'HH':'00\");\r\n        }\r\n        // call parent update\r\n        onTaskUpdate && onTaskUpdate({ ...t, start: newStartDate, end: newEndDate });\r\n      }\r\n\r\n      // clear\r\n      draggingRef.current = null;\r\n      setPreviewMap((p) => {\r\n        const np = { ...p };\r\n        delete np[taskId];\r\n        return np;\r\n      });\r\n      window.removeEventListener(\"pointermove\", handleMove);\r\n      window.removeEventListener(\"pointerup\", handleUp);\r\n    };\r\n\r\n    if (draggingRef.current) {\r\n      window.addEventListener(\"pointermove\", handleMove, { passive: false });\r\n      window.addEventListener(\"pointerup\", handleUp, { passive: false });\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"pointermove\", handleMove);\r\n      window.removeEventListener(\"pointerup\", handleUp);\r\n    };\r\n  }, [previewMap, tasks, colWidth, onTaskUpdate, range, colCount]);\r\n\r\n  // pointer down starter\r\n  const startDrag = (ev, type, taskId, origStartIdx, origEndIdx) => {\r\n    ev.preventDefault();\r\n    const clientX = ev.clientX ?? (ev.touches && ev.touches[0] && ev.touches[0].clientX) ?? 0;\r\n    draggingRef.current = { type, taskId, origStartIdx, origEndIdx, pointerX0: clientX };\r\n    // set initial preview\r\n    setPreviewMap((p) => ({ ...p, [taskId]: { startIdx: origStartIdx, endIdx: origEndIdx } }));\r\n    // ensure listeners are added via effect\r\n  };\r\n\r\n  return (\r\n    <div className=\"gantt-excel\" ref={containerRef}>\r\n      <div\r\n        className=\"excel-grid\"\r\n        ref={gridRef}\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns,\r\n          gridAutoRows: \"56px\",\r\n          border: \"1px solid #eee\",\r\n          borderRadius: 6,\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        {/* header: left empty cell */}\r\n        <div className=\"cell header-left\" style={{ borderRight: \"1px solid #f0f0f0\", background: \"#fff\" }} />\r\n        {range.columns.map((col, ci) => {\r\n          const day = col.getDay();\r\n          const isSat = day === 6;\r\n          const isSun = day === 0;\r\n          const label = range.unit === \"day\" ? format(col, \"MM/dd (EEE)\", { locale: ja }) : format(col, \"HH:00\");\r\n          return (\r\n            <div\r\n              key={ci}\r\n              className={`cell header ${isSat ? \"sat\" : isSun ? \"sun\" : \"\"}`}\r\n              style={{ borderRight: \"1px solid #f4f4f4\", textAlign: \"center\", padding: 8, boxSizing: \"border-box\" }}\r\n            >\r\n              <div style={{ fontSize: 12, color: isSat ? \"#1976d2\" : isSun ? \"#e53935\" : \"inherit\" }}>{label}</div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        {/* rows: for each visible task render left title cell + right empty cells then task bar positioned via grid-column */}\r\n        {visibleTasks.map((t, rowIndex) => {\r\n          const start = parseISO(t.start);\r\n          const end = parseISO(t.end);\r\n          const startClamped = start < range.start ? range.start : start;\r\n          const endClamped = end > range.end ? range.end : end;\r\n\r\n          const startIdx = getStartIndex(startClamped);\r\n          // compute endIdx exclusive: for day view just +1; for hour view ensure at least 1\r\n          const endIdx =\r\n            range.unit === \"day\"\r\n              ? Math.min(colCount, differenceInDays(endClamped, range.start) + 1)\r\n              : Math.min(colCount, Math.ceil(differenceInMinutes(endClamped, range.start) / 60) + 1);\r\n\r\n          // left title cell\r\n          const isSelected = editingTaskId && editingTaskId === t.id;\r\n          const gridRowIndex = rowIndex + 2; // header is row 1, tasks start at row 2\r\n\r\n          return (\r\n            <React.Fragment key={t.id}>\r\n              <div\r\n                className={`cell left-cell ${isSelected ? \"selected\" : \"\"}`}\r\n                onClick={() => onTaskClick && onTaskClick(t)}\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"center\",\r\n                  padding: \"8px 12px\",\r\n                  borderRight: \"1px solid #f4f4f4\",\r\n                  boxSizing: \"border-box\",\r\n                  cursor: \"pointer\",\r\n                  background: isSelected ? \"rgba(25,118,210,0.04)\" : \"#fff\",\r\n                  gridColumn: 1,\r\n                  gridRow: gridRowIndex,\r\n                }}\r\n                title={t.description || \"\"}\r\n              >\r\n                <div className=\"left-title\" style={{ fontWeight: 700, whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\" }}>{t.title}</div>\r\n\r\n                {/* members 表示（タイトル列は「タイトル」と「メンバー」のみ） */}\r\n                {Array.isArray(t.members) && t.members.length > 0 && (\r\n                  <div className=\"left-members\" style={{ fontSize: 12, color: \"#555\", marginTop: 6, whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\" }}>\r\n                    {t.members.join(\", \")}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* render right-side empty cells for this row (cells themselves are empty to look like Excel) */}\r\n              {range.columns.map((_, ci) => (\r\n                <div\r\n                  key={ci}\r\n                  className=\"cell grid-cell\"\r\n                  style={{\r\n                    borderRight: \"1px solid #f7f7f7\",\r\n                    boxSizing: \"border-box\",\r\n                    gridColumn: ci + 2,\r\n                    gridRow: gridRowIndex,\r\n                  }}\r\n                />\r\n              ))}\r\n\r\n              {/* task bar: positioned by gridColumn start/end (grid is 1-based: left column is 1) */}\r\n              <div\r\n                className={`task-bar${isSelected ? \" selected\" : \"\"}`}\r\n                style={{\r\n                  gridColumn: `${startIdx + 2} / ${endIdx + 2}`, // data columns start at 2\r\n                  gridRow: gridRowIndex,\r\n                  alignSelf: \"center\",\r\n                  height: 32,\r\n                  borderRadius: 6,\r\n                  background: t.color,\r\n                  boxShadow: isSelected ? \"0 6px 14px rgba(0,0,0,0.12)\" : \"none\",\r\n                  cursor: \"pointer\",\r\n                  position: \"relative\",\r\n                }}\r\n                onPointerDown={(e) => {\r\n                  // don't start move if started on handle: handle will call its own\r\n                  const tgt = e.target;\r\n                  if (tgt && typeof HTMLElement !== \"undefined\" && tgt instanceof HTMLElement && tgt.dataset && tgt.dataset.handle) {\r\n                    return;\r\n                  }\r\n                  startDrag(e, \"move\", t.id, startIdx, endIdx);\r\n                }}\r\n                onClick={() => onTaskClick && onTaskClick(t)}\r\n                title={`${t.title}\\n${t.description || \"\"}\\n${format(start, \"yyyy-MM-dd HH:mm\", { locale: ja })} - ${format(end, \"yyyy-MM-dd HH:mm\", { locale: ja })}`}\r\n              >\r\n                <div\r\n                  data-handle=\"left\"\r\n                  onPointerDown={(e) => { e.stopPropagation(); startDrag(e, \"resize-left\", t.id, startIdx, endIdx); }}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    left: 0,\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    width: 10,\r\n                    cursor: \"ew-resize\",\r\n                    zIndex: 6,\r\n                  }}\r\n                />\r\n                <div\r\n                  data-handle=\"right\"\r\n                  onPointerDown={(e) => { e.stopPropagation(); startDrag(e, \"resize-right\", t.id, startIdx, endIdx); }}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    right: 0,\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    width: 10,\r\n                    cursor: \"ew-resize\",\r\n                    zIndex: 6,\r\n                  }}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}