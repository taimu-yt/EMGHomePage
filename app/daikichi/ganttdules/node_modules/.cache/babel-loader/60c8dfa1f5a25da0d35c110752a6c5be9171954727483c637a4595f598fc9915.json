{"ast":null,"code":"var _jsxFileName = \"C:\\\\work\\\\EMG\\\\app01\\\\src\\\\components\\\\Gantt.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { parseISO, startOfMonth, endOfMonth, startOfWeek, endOfWeek, startOfDay, endOfDay, differenceInDays, differenceInHours, addDays, addHours, format, differenceInMinutes } from \"date-fns\";\nimport { ja } from \"date-fns/locale\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getRange(view, currentDate) {\n  if (view === \"month\") {\n    const start = startOfMonth(currentDate);\n    const end = endOfMonth(currentDate);\n    const days = differenceInDays(end, start) + 1;\n    const columns = Array.from({\n      length: days\n    }).map((_, i) => addDays(start, i));\n    return {\n      start,\n      end,\n      columns,\n      unit: \"day\"\n    };\n  }\n  if (view === \"week\") {\n    const start = startOfWeek(currentDate, {\n      weekStartsOn: 1\n    });\n    const end = endOfWeek(currentDate, {\n      weekStartsOn: 1\n    });\n    const days = differenceInDays(end, start) + 1;\n    const columns = Array.from({\n      length: days\n    }).map((_, i) => addDays(start, i));\n    return {\n      start,\n      end,\n      columns,\n      unit: \"day\"\n    };\n  }\n  const start = startOfDay(currentDate);\n  const end = endOfDay(currentDate);\n  const columns = Array.from({\n    length: 24\n  }).map((_, i) => addHours(start, i));\n  return {\n    start,\n    end,\n    columns,\n    unit: \"hour\"\n  };\n}\nexport default function Gantt({\n  tasks,\n  view,\n  currentDate,\n  onTaskClick,\n  editingTaskId,\n  onTaskUpdate\n}) {\n  _s();\n  const range = getRange(view, currentDate);\n  const containerRef = useRef(null);\n  const gridRef = useRef(null);\n  const [containerWidth, setContainerWidth] = useState(() => typeof window !== \"undefined\" ? window.innerWidth : 900);\n  useEffect(() => {\n    const measure = () => {\n      const el = containerRef.current;\n      const w = el ? el.clientWidth : typeof window !== \"undefined\" ? window.innerWidth : 900;\n      setContainerWidth(Math.max(300, w));\n    };\n    measure();\n    window.addEventListener(\"resize\", measure);\n    return () => window.removeEventListener(\"resize\", measure);\n  }, []);\n\n  // layout\n  const leftColumnWidth = 220;\n  const colCount = range.columns.length;\n  const availableForRight = Math.max(200, containerWidth - leftColumnWidth);\n  const minColWidth = range.unit === \"hour\" ? 60 : 48;\n  const desired = availableForRight / Math.max(1, colCount);\n  const colWidth = desired < minColWidth ? minColWidth : desired;\n  const gridTemplateColumns = `${leftColumnWidth}px ${Array.from({\n    length: colCount\n  }).map(() => `${colWidth}px`).join(\" \")}`;\n\n  // visible tasks\n  const rStartMs = range.start.getTime();\n  const rEndMs = range.end.getTime();\n  const visibleTasks = tasks.filter(t => {\n    try {\n      const sMs = parseISO(t.start).getTime();\n      const eMs = parseISO(t.end).getTime();\n      return eMs >= rStartMs && sMs <= rEndMs;\n    } catch {\n      return false;\n    }\n  });\n  const getStartIndex = d => {\n    const dt = typeof d === \"string\" ? parseISO(d) : d;\n    if (range.unit === \"day\") return Math.max(0, differenceInDays(dt, range.start));\n    return Math.max(0, Math.floor(differenceInMinutes(dt, range.start) / 60));\n  };\n\n  // drag/resize state (preview shown)\n  const [previewMap, setPreviewMap] = useState({}); // taskId -> {startIdx, endIdx}\n  const draggingRef = useRef(null); // {type, taskId, origStartIdx, origEndIdx, pointerX0}\n\n  useEffect(() => {\n    const handleMove = ev => {\n      var _ref, _ev$clientX;\n      if (!draggingRef.current) return;\n      ev.preventDefault();\n      const {\n        type,\n        taskId,\n        origStartIdx,\n        origEndIdx,\n        pointerX0\n      } = draggingRef.current;\n      const clientX = (_ref = (_ev$clientX = ev.clientX) !== null && _ev$clientX !== void 0 ? _ev$clientX : ev.touches && ev.touches[0] && ev.touches[0].clientX) !== null && _ref !== void 0 ? _ref : 0;\n      const gridEl = gridRef.current;\n      if (!gridEl) return;\n      const gridRect = gridEl.getBoundingClientRect();\n      const dataStartX = gridRect.left + leftColumnWidth;\n      const deltaPx = clientX - pointerX0;\n      const deltaCols = Math.round(deltaPx / colWidth);\n      let newStart = origStartIdx;\n      let newEnd = origEndIdx;\n      if (type === \"move\") {\n        newStart = Math.max(0, Math.min(colCount - 1, origStartIdx + deltaCols));\n        newEnd = Math.max(newStart + 1, Math.min(colCount, origEndIdx + deltaCols));\n      } else if (type === \"resize-left\") {\n        newStart = Math.max(0, Math.min(origEndIdx - 1, origStartIdx + deltaCols));\n      } else if (type === \"resize-right\") {\n        newEnd = Math.max(origStartIdx + 1, Math.min(colCount, origEndIdx + deltaCols));\n      }\n      setPreviewMap(p => ({\n        ...p,\n        [taskId]: {\n          startIdx: newStart,\n          endIdx: newEnd\n        }\n      }));\n    };\n    const handleUp = ev => {\n      if (!draggingRef.current) return;\n      ev.preventDefault();\n      const {\n        taskId\n      } = draggingRef.current;\n      const preview = previewMap[taskId];\n      const t = tasks.find(x => x.id === taskId);\n      if (preview && t) {\n        // compute new dates based on preview indices\n        let newStartDate, newEndDate;\n        if (range.unit === \"day\") {\n          newStartDate = format(addDays(range.start, preview.startIdx), \"yyyy-MM-dd\");\n          // end index is exclusive -> set end to endIdx-1\n          newEndDate = format(addDays(range.start, preview.endIdx - 1), \"yyyy-MM-dd\");\n        } else {\n          const s = addHours(range.start, preview.startIdx);\n          const e = addHours(range.start, preview.endIdx - 1);\n          newStartDate = format(s, \"yyyy-MM-dd'T'HH':'00\");\n          newEndDate = format(e, \"yyyy-MM-dd'T'HH':'00\");\n        }\n        // call parent update\n        onTaskUpdate && onTaskUpdate({\n          ...t,\n          start: newStartDate,\n          end: newEndDate\n        });\n      }\n\n      // clear\n      draggingRef.current = null;\n      setPreviewMap(p => {\n        const np = {\n          ...p\n        };\n        delete np[taskId];\n        return np;\n      });\n      window.removeEventListener(\"pointermove\", handleMove);\n      window.removeEventListener(\"pointerup\", handleUp);\n    };\n    if (draggingRef.current) {\n      window.addEventListener(\"pointermove\", handleMove, {\n        passive: false\n      });\n      window.addEventListener(\"pointerup\", handleUp, {\n        passive: false\n      });\n    }\n    return () => {\n      window.removeEventListener(\"pointermove\", handleMove);\n      window.removeEventListener(\"pointerup\", handleUp);\n    };\n  }, [previewMap, tasks, colWidth, leftColumnWidth, onTaskUpdate, range, colCount]);\n\n  // pointer down starter\n  const startDrag = (ev, type, taskId, origStartIdx, origEndIdx) => {\n    var _ref2, _ev$clientX2;\n    ev.preventDefault();\n    const clientX = (_ref2 = (_ev$clientX2 = ev.clientX) !== null && _ev$clientX2 !== void 0 ? _ev$clientX2 : ev.touches && ev.touches[0] && ev.touches[0].clientX) !== null && _ref2 !== void 0 ? _ref2 : 0;\n    draggingRef.current = {\n      type,\n      taskId,\n      origStartIdx,\n      origEndIdx,\n      pointerX0: clientX\n    };\n    // set initial preview\n    setPreviewMap(p => ({\n      ...p,\n      [taskId]: {\n        startIdx: origStartIdx,\n        endIdx: origEndIdx\n      }\n    }));\n    // ensure listeners are added via effect\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gantt-excel\",\n    ref: containerRef,\n    style: {\n      height: \"100%\",\n      minHeight: 0,\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"excel-header\",\n      style: {\n        display: \"grid\",\n        gridTemplateColumns,\n        gridAutoRows: \"56px\",\n        border: \"1px solid #eee\",\n        borderRadius: 6,\n        boxSizing: \"border-box\",\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell header-left\",\n        style: {\n          borderRight: \"1px solid #f0f0f0\",\n          background: \"#fff\",\n          gridColumn: 1,\n          gridRow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), range.columns.map((col, ci) => {\n        const day = col.getDay();\n        const isSat = day === 6;\n        const isSun = day === 0;\n        const label = range.unit === \"day\" ? format(col, \"MM/dd (EEE)\", {\n          locale: ja\n        }) : format(col, \"HH:00\");\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cell header ${isSat ? \"sat\" : isSun ? \"sun\" : \"\"}`,\n          style: {\n            borderRight: \"1px solid #f4f4f4\",\n            textAlign: \"center\",\n            padding: 8,\n            boxSizing: \"border-box\",\n            gridColumn: ci + 2,\n            gridRow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: isSat ? \"#1976d2\" : isSun ? \"#e53935\" : \"inherit\"\n            },\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)\n        }, ci, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"excel-body\",\n      style: {\n        flex: 1,\n        minHeight: 0,\n        overflow: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-body-grid\",\n        ref: gridRef,\n        style: {\n          display: \"grid\",\n          gridTemplateColumns,\n          gridAutoRows: \"56px\",\n          boxSizing: \"border-box\",\n          width: \"100%\"\n        },\n        children: visibleTasks.map((t, rowIndex) => {\n          const start = parseISO(t.start);\n          const end = parseISO(t.end);\n          const startClamped = start < range.start ? range.start : start;\n          const endClamped = end > range.end ? range.end : end;\n          const origStartIdx = getStartIndex(startClamped);\n          const origEndIdx = range.unit === \"day\" ? Math.min(colCount, differenceInDays(endClamped, range.start) + 1) : Math.min(colCount, Math.ceil(differenceInMinutes(endClamped, range.start) / 60) + 1);\n          const preview = previewMap[t.id];\n          const startIdx = preview ? preview.startIdx : origStartIdx;\n          const endIdx = preview ? preview.endIdx : origEndIdx;\n          const isSelected = editingTaskId && editingTaskId === t.id;\n          const gridRowIndex = rowIndex + 1; // body grid rows start at 1\n\n          // left title cell\n          const leftCell = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cell left-cell ${isSelected ? \"selected\" : \"\"}`,\n            onClick: () => onTaskClick && onTaskClick(t),\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              padding: \"8px 12px\",\n              borderRight: \"1px solid #f4f4f4\",\n              boxSizing: \"border-box\",\n              cursor: \"pointer\",\n              background: isSelected ? \"rgba(25,118,210,0.04)\" : \"#fff\",\n              gridColumn: 1,\n              gridRow: gridRowIndex\n            },\n            title: t.description || \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left-title\",\n              style: {\n                fontWeight: 700,\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\"\n              },\n              children: t.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), Array.isArray(t.members) && t.members.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left-members\",\n              style: {\n                fontSize: 12,\n                color: \"#555\",\n                marginTop: 6,\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\"\n              },\n              children: t.members.join(\", \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this)]\n          }, `left-${t.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this);\n          const gridCells = range.columns.map((_, ci) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell grid-cell\",\n            style: {\n              borderRight: \"1px solid #f7f7f7\",\n              boxSizing: \"border-box\",\n              gridColumn: ci + 2,\n              gridRow: gridRowIndex\n            }\n          }, `cell-${t.id}-${ci}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this));\n\n          // task bar with handles\n          const taskBar = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `task-bar${isSelected ? \" selected\" : \"\"}`,\n            style: {\n              gridColumn: `${startIdx + 2} / ${endIdx + 2}`,\n              gridRow: gridRowIndex,\n              alignSelf: \"center\",\n              height: 32,\n              borderRadius: 6,\n              background: t.color,\n              boxShadow: isSelected ? \"0 6px 14px rgba(0,0,0,0.12)\" : \"none\",\n              cursor: \"grab\",\n              position: \"relative\",\n              zIndex: 5\n            },\n            onPointerDown: e => {\n              // e.target may be not an HTMLElement; check safely and ignore if started on a handle\n              const tgt = e.target;\n              if (tgt && typeof HTMLElement !== \"undefined\" && tgt instanceof HTMLElement && tgt.dataset && tgt.dataset.handle) {\n                return;\n              }\n              startDrag(e, \"move\", t.id, origStartIdx, origEndIdx);\n            },\n            onClick: () => onTaskClick && onTaskClick(t),\n            title: `${t.title}\\n${t.description || \"\"}\\n${format(start, \"yyyy-MM-dd HH:mm\", {\n              locale: ja\n            })} - ${format(end, \"yyyy-MM-dd HH:mm\", {\n              locale: ja\n            })}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              \"data-handle\": \"left\",\n              onPointerDown: e => {\n                e.stopPropagation();\n                startDrag(e, \"resize-left\", t.id, origStartIdx, origEndIdx);\n              },\n              style: {\n                position: \"absolute\",\n                left: 0,\n                top: 0,\n                bottom: 0,\n                width: 10,\n                cursor: \"ew-resize\",\n                zIndex: 6\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              \"data-handle\": \"right\",\n              onPointerDown: e => {\n                e.stopPropagation();\n                startDrag(e, \"resize-right\", t.id, origStartIdx, origEndIdx);\n              },\n              style: {\n                position: \"absolute\",\n                right: 0,\n                top: 0,\n                bottom: 0,\n                width: 10,\n                cursor: \"ew-resize\",\n                zIndex: 6\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)]\n          }, `bar-${t.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this);\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [leftCell, gridCells, taskBar]\n          }, t.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(Gantt, \"V6eeA7M91YgQCRNHJp78Jtbcpj0=\");\n_c = Gantt;\nvar _c;\n$RefreshReg$(_c, \"Gantt\");","map":{"version":3,"names":["React","useRef","useState","useEffect","parseISO","startOfMonth","endOfMonth","startOfWeek","endOfWeek","startOfDay","endOfDay","differenceInDays","differenceInHours","addDays","addHours","format","differenceInMinutes","ja","jsxDEV","_jsxDEV","getRange","view","currentDate","start","end","days","columns","Array","from","length","map","_","i","unit","weekStartsOn","Gantt","tasks","onTaskClick","editingTaskId","onTaskUpdate","_s","range","containerRef","gridRef","containerWidth","setContainerWidth","window","innerWidth","measure","el","current","w","clientWidth","Math","max","addEventListener","removeEventListener","leftColumnWidth","colCount","availableForRight","minColWidth","desired","colWidth","gridTemplateColumns","join","rStartMs","getTime","rEndMs","visibleTasks","filter","t","sMs","eMs","getStartIndex","d","dt","floor","previewMap","setPreviewMap","draggingRef","handleMove","ev","_ref","_ev$clientX","preventDefault","type","taskId","origStartIdx","origEndIdx","pointerX0","clientX","touches","gridEl","gridRect","getBoundingClientRect","dataStartX","left","deltaPx","deltaCols","round","newStart","newEnd","min","p","startIdx","endIdx","handleUp","preview","find","x","id","newStartDate","newEndDate","s","e","np","passive","startDrag","_ref2","_ev$clientX2","className","ref","style","height","minHeight","display","flexDirection","children","gridAutoRows","border","borderRadius","boxSizing","overflow","borderRight","background","gridColumn","gridRow","fileName","_jsxFileName","lineNumber","columnNumber","col","ci","day","getDay","isSat","isSun","label","locale","textAlign","padding","fontSize","color","flex","width","rowIndex","startClamped","endClamped","ceil","isSelected","gridRowIndex","leftCell","onClick","justifyContent","cursor","title","description","fontWeight","whiteSpace","textOverflow","isArray","members","marginTop","gridCells","taskBar","alignSelf","boxShadow","position","zIndex","onPointerDown","tgt","target","HTMLElement","dataset","handle","stopPropagation","top","bottom","right","Fragment","_c","$RefreshReg$"],"sources":["C:/work/EMG/app01/src/components/Gantt.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport {\r\n  parseISO,\r\n  startOfMonth,\r\n  endOfMonth,\r\n  startOfWeek,\r\n  endOfWeek,\r\n  startOfDay,\r\n  endOfDay,\r\n  differenceInDays,\r\n  differenceInHours,\r\n  addDays,\r\n  addHours,\r\n  format,\r\n  differenceInMinutes,\r\n} from \"date-fns\";\r\nimport { ja } from \"date-fns/locale\";\r\n\r\nfunction getRange(view, currentDate) {\r\n  if (view === \"month\") {\r\n    const start = startOfMonth(currentDate);\r\n    const end = endOfMonth(currentDate);\r\n    const days = differenceInDays(end, start) + 1;\r\n    const columns = Array.from({ length: days }).map((_, i) => addDays(start, i));\r\n    return { start, end, columns, unit: \"day\" };\r\n  }\r\n  if (view === \"week\") {\r\n    const start = startOfWeek(currentDate, { weekStartsOn: 1 });\r\n    const end = endOfWeek(currentDate, { weekStartsOn: 1 });\r\n    const days = differenceInDays(end, start) + 1;\r\n    const columns = Array.from({ length: days }).map((_, i) => addDays(start, i));\r\n    return { start, end, columns, unit: \"day\" };\r\n  }\r\n  const start = startOfDay(currentDate);\r\n  const end = endOfDay(currentDate);\r\n  const columns = Array.from({ length: 24 }).map((_, i) => addHours(start, i));\r\n  return { start, end, columns, unit: \"hour\" };\r\n}\r\n\r\nexport default function Gantt({ tasks, view, currentDate, onTaskClick, editingTaskId, onTaskUpdate }) {\r\n  const range = getRange(view, currentDate);\r\n\r\n  const containerRef = useRef(null);\r\n  const gridRef = useRef(null);\r\n  const [containerWidth, setContainerWidth] = useState(() => (typeof window !== \"undefined\" ? window.innerWidth : 900));\r\n\r\n  useEffect(() => {\r\n    const measure = () => {\r\n      const el = containerRef.current;\r\n      const w = el ? el.clientWidth : (typeof window !== \"undefined\" ? window.innerWidth : 900);\r\n      setContainerWidth(Math.max(300, w));\r\n    };\r\n    measure();\r\n    window.addEventListener(\"resize\", measure);\r\n    return () => window.removeEventListener(\"resize\", measure);\r\n  }, []);\r\n\r\n  // layout\r\n  const leftColumnWidth = 220;\r\n  const colCount = range.columns.length;\r\n  const availableForRight = Math.max(200, containerWidth - leftColumnWidth);\r\n  const minColWidth = range.unit === \"hour\" ? 60 : 48;\r\n  const desired = availableForRight / Math.max(1, colCount);\r\n  const colWidth = desired < minColWidth ? minColWidth : desired;\r\n\r\n  const gridTemplateColumns = `${leftColumnWidth}px ${Array.from({ length: colCount }).map(() => `${colWidth}px`).join(\" \")}`;\r\n\r\n  // visible tasks\r\n  const rStartMs = range.start.getTime();\r\n  const rEndMs = range.end.getTime();\r\n  const visibleTasks = tasks.filter((t) => {\r\n    try {\r\n      const sMs = parseISO(t.start).getTime();\r\n      const eMs = parseISO(t.end).getTime();\r\n      return eMs >= rStartMs && sMs <= rEndMs;\r\n    } catch {\r\n      return false;\r\n    }\r\n  });\r\n\r\n  const getStartIndex = (d) => {\r\n    const dt = typeof d === \"string\" ? parseISO(d) : d;\r\n    if (range.unit === \"day\") return Math.max(0, differenceInDays(dt, range.start));\r\n    return Math.max(0, Math.floor(differenceInMinutes(dt, range.start) / 60));\r\n  };\r\n\r\n  // drag/resize state (preview shown)\r\n  const [previewMap, setPreviewMap] = useState({}); // taskId -> {startIdx, endIdx}\r\n  const draggingRef = useRef(null); // {type, taskId, origStartIdx, origEndIdx, pointerX0}\r\n\r\n  useEffect(() => {\r\n    const handleMove = (ev) => {\r\n      if (!draggingRef.current) return;\r\n      ev.preventDefault();\r\n      const { type, taskId, origStartIdx, origEndIdx, pointerX0 } = draggingRef.current;\r\n      const clientX = ev.clientX ?? (ev.touches && ev.touches[0] && ev.touches[0].clientX) ?? 0;\r\n      const gridEl = gridRef.current;\r\n      if (!gridEl) return;\r\n      const gridRect = gridEl.getBoundingClientRect();\r\n      const dataStartX = gridRect.left + leftColumnWidth;\r\n      const deltaPx = clientX - pointerX0;\r\n      const deltaCols = Math.round(deltaPx / colWidth);\r\n\r\n      let newStart = origStartIdx;\r\n      let newEnd = origEndIdx;\r\n      if (type === \"move\") {\r\n        newStart = Math.max(0, Math.min(colCount - 1, origStartIdx + deltaCols));\r\n        newEnd = Math.max(newStart + 1, Math.min(colCount, origEndIdx + deltaCols));\r\n      } else if (type === \"resize-left\") {\r\n        newStart = Math.max(0, Math.min(origEndIdx - 1, origStartIdx + deltaCols));\r\n      } else if (type === \"resize-right\") {\r\n        newEnd = Math.max(origStartIdx + 1, Math.min(colCount, origEndIdx + deltaCols));\r\n      }\r\n\r\n      setPreviewMap((p) => ({ ...p, [taskId]: { startIdx: newStart, endIdx: newEnd } }));\r\n    };\r\n\r\n    const handleUp = (ev) => {\r\n      if (!draggingRef.current) return;\r\n      ev.preventDefault();\r\n      const { taskId } = draggingRef.current;\r\n      const preview = previewMap[taskId];\r\n      const t = tasks.find((x) => x.id === taskId);\r\n      if (preview && t) {\r\n        // compute new dates based on preview indices\r\n        let newStartDate, newEndDate;\r\n        if (range.unit === \"day\") {\r\n          newStartDate = format(addDays(range.start, preview.startIdx), \"yyyy-MM-dd\");\r\n          // end index is exclusive -> set end to endIdx-1\r\n          newEndDate = format(addDays(range.start, preview.endIdx - 1), \"yyyy-MM-dd\");\r\n        } else {\r\n          const s = addHours(range.start, preview.startIdx);\r\n          const e = addHours(range.start, preview.endIdx - 1);\r\n          newStartDate = format(s, \"yyyy-MM-dd'T'HH':'00\");\r\n          newEndDate = format(e, \"yyyy-MM-dd'T'HH':'00\");\r\n        }\r\n        // call parent update\r\n        onTaskUpdate && onTaskUpdate({ ...t, start: newStartDate, end: newEndDate });\r\n      }\r\n\r\n      // clear\r\n      draggingRef.current = null;\r\n      setPreviewMap((p) => {\r\n        const np = { ...p };\r\n        delete np[taskId];\r\n        return np;\r\n      });\r\n      window.removeEventListener(\"pointermove\", handleMove);\r\n      window.removeEventListener(\"pointerup\", handleUp);\r\n    };\r\n\r\n    if (draggingRef.current) {\r\n      window.addEventListener(\"pointermove\", handleMove, { passive: false });\r\n      window.addEventListener(\"pointerup\", handleUp, { passive: false });\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"pointermove\", handleMove);\r\n      window.removeEventListener(\"pointerup\", handleUp);\r\n    };\r\n  }, [previewMap, tasks, colWidth, leftColumnWidth, onTaskUpdate, range, colCount]);\r\n\r\n  // pointer down starter\r\n  const startDrag = (ev, type, taskId, origStartIdx, origEndIdx) => {\r\n    ev.preventDefault();\r\n    const clientX = ev.clientX ?? (ev.touches && ev.touches[0] && ev.touches[0].clientX) ?? 0;\r\n    draggingRef.current = { type, taskId, origStartIdx, origEndIdx, pointerX0: clientX };\r\n    // set initial preview\r\n    setPreviewMap((p) => ({ ...p, [taskId]: { startIdx: origStartIdx, endIdx: origEndIdx } }));\r\n    // ensure listeners are added via effect\r\n  };\r\n\r\n  return (\r\n    <div className=\"gantt-excel\" ref={containerRef} style={{height: \"100%\", minHeight: 0, display: \"flex\", flexDirection: \"column\"}}>\r\n      {/* header row (fixed) */}\r\n      <div\r\n        className=\"excel-header\"\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns,\r\n          gridAutoRows: \"56px\",\r\n          border: \"1px solid #eee\",\r\n          borderRadius: 6,\r\n          boxSizing: \"border-box\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <div className=\"cell header-left\" style={{ borderRight: \"1px solid #f0f0f0\", background: \"#fff\", gridColumn: 1, gridRow: 1 }} />\r\n\r\n        {range.columns.map((col, ci) => {\r\n          const day = col.getDay();\r\n          const isSat = day === 6;\r\n          const isSun = day === 0;\r\n          const label = range.unit === \"day\" ? format(col, \"MM/dd (EEE)\", { locale: ja }) : format(col, \"HH:00\");\r\n          return (\r\n            <div\r\n              key={ci}\r\n              className={`cell header ${isSat ? \"sat\" : isSun ? \"sun\" : \"\"}`}\r\n              style={{\r\n                borderRight: \"1px solid #f4f4f4\",\r\n                textAlign: \"center\",\r\n                padding: 8,\r\n                boxSizing: \"border-box\",\r\n                gridColumn: ci + 2,\r\n                gridRow: 1,\r\n              }}\r\n            >\r\n              <div style={{ fontSize: 12, color: isSat ? \"#1976d2\" : isSun ? \"#e53935\" : \"inherit\" }}>{label}</div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* body (scrollable vertically) */}\r\n      <div className=\"excel-body\" style={{ flex: 1, minHeight: 0, overflow: \"auto\" }}>\r\n        <div\r\n          className=\"excel-body-grid\"\r\n          ref={gridRef}\r\n          style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns,\r\n            gridAutoRows: \"56px\",\r\n            boxSizing: \"border-box\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {visibleTasks.map((t, rowIndex) => {\r\n            const start = parseISO(t.start);\r\n            const end = parseISO(t.end);\r\n            const startClamped = start < range.start ? range.start : start;\r\n            const endClamped = end > range.end ? range.end : end;\r\n\r\n            const origStartIdx = getStartIndex(startClamped);\r\n            const origEndIdx =\r\n              range.unit === \"day\"\r\n                ? Math.min(colCount, differenceInDays(endClamped, range.start) + 1)\r\n                : Math.min(colCount, Math.ceil(differenceInMinutes(endClamped, range.start) / 60) + 1);\r\n\r\n            const preview = previewMap[t.id];\r\n            const startIdx = preview ? preview.startIdx : origStartIdx;\r\n            const endIdx = preview ? preview.endIdx : origEndIdx;\r\n\r\n            const isSelected = editingTaskId && editingTaskId === t.id;\r\n            const gridRowIndex = rowIndex + 1; // body grid rows start at 1\r\n\r\n            // left title cell\r\n            const leftCell = (\r\n              <div\r\n                key={`left-${t.id}`}\r\n                className={`cell left-cell ${isSelected ? \"selected\" : \"\"}`}\r\n                onClick={() => onTaskClick && onTaskClick(t)}\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"center\",\r\n                  padding: \"8px 12px\",\r\n                  borderRight: \"1px solid #f4f4f4\",\r\n                  boxSizing: \"border-box\",\r\n                  cursor: \"pointer\",\r\n                  background: isSelected ? \"rgba(25,118,210,0.04)\" : \"#fff\",\r\n                  gridColumn: 1,\r\n                  gridRow: gridRowIndex,\r\n                }}\r\n                title={t.description || \"\"}\r\n              >\r\n                <div className=\"left-title\" style={{ fontWeight: 700, whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\" }}>{t.title}</div>\r\n                {Array.isArray(t.members) && t.members.length > 0 && (\r\n                  <div className=\"left-members\" style={{ fontSize: 12, color: \"#555\", marginTop: 6, whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\" }}>\r\n                    {t.members.join(\", \")}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n\r\n            const gridCells = range.columns.map((_, ci) => (\r\n              <div\r\n                key={`cell-${t.id}-${ci}`}\r\n                className=\"cell grid-cell\"\r\n                style={{\r\n                  borderRight: \"1px solid #f7f7f7\",\r\n                  boxSizing: \"border-box\",\r\n                  gridColumn: ci + 2,\r\n                  gridRow: gridRowIndex,\r\n                }}\r\n              />\r\n            ));\r\n\r\n            // task bar with handles\r\n            const taskBar = (\r\n              <div\r\n                key={`bar-${t.id}`}\r\n                className={`task-bar${isSelected ? \" selected\" : \"\"}`}\r\n                style={{\r\n                  gridColumn: `${startIdx + 2} / ${endIdx + 2}`,\r\n                  gridRow: gridRowIndex,\r\n                  alignSelf: \"center\",\r\n                  height: 32,\r\n                  borderRadius: 6,\r\n                  background: t.color,\r\n                  boxShadow: isSelected ? \"0 6px 14px rgba(0,0,0,0.12)\" : \"none\",\r\n                  cursor: \"grab\",\r\n                  position: \"relative\",\r\n                  zIndex: 5,\r\n                }}\r\n                onPointerDown={(e) => {\r\n                  // e.target may be not an HTMLElement; check safely and ignore if started on a handle\r\n                  const tgt = e.target;\r\n                  if (tgt && typeof HTMLElement !== \"undefined\" && tgt instanceof HTMLElement && tgt.dataset && tgt.dataset.handle) {\r\n                    return;\r\n                  }\r\n                  startDrag(e, \"move\", t.id, origStartIdx, origEndIdx);\r\n                }}\r\n                onClick={() => onTaskClick && onTaskClick(t)}\r\n                title={`${t.title}\\n${t.description || \"\"}\\n${format(start, \"yyyy-MM-dd HH:mm\", { locale: ja })} - ${format(end, \"yyyy-MM-dd HH:mm\", { locale: ja })}`}\r\n              >\r\n                <div\r\n                  data-handle=\"left\"\r\n                  onPointerDown={(e) => { e.stopPropagation(); startDrag(e, \"resize-left\", t.id, origStartIdx, origEndIdx); }}\r\n                  style={{ position: \"absolute\", left: 0, top: 0, bottom: 0, width: 10, cursor: \"ew-resize\", zIndex: 6 }}\r\n                />\r\n                <div\r\n                  data-handle=\"right\"\r\n                  onPointerDown={(e) => { e.stopPropagation(); startDrag(e, \"resize-right\", t.id, origStartIdx, origEndIdx); }}\r\n                  style={{ position: \"absolute\", right: 0, top: 0, bottom: 0, width: 10, cursor: \"ew-resize\", zIndex: 6 }}\r\n                />\r\n              </div>\r\n            );\r\n\r\n            return (\r\n              <React.Fragment key={t.id}>\r\n                {leftCell}\r\n                {gridCells}\r\n                {taskBar}\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}