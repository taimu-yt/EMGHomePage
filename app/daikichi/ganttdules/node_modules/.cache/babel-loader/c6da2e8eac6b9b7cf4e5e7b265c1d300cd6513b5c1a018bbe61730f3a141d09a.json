{"ast":null,"code":"import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\n\n/**\r\n * The {@link formatDuration} function options.\r\n */\n\nconst defaultFormat = [\"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\"];\n\n/**\r\n * @name formatDuration\r\n * @category Common Helpers\r\n * @summary Formats a duration in human-readable format\r\n *\r\n * @description\r\n * Return human-readable duration string i.e. \"9 months 2 days\"\r\n *\r\n * @param duration - The duration to format\r\n * @param options - An object with options.\r\n *\r\n * @returns The formatted date string\r\n *\r\n * @example\r\n * // Format full duration\r\n * formatDuration({\r\n *   years: 2,\r\n *   months: 9,\r\n *   weeks: 1,\r\n *   days: 7,\r\n *   hours: 5,\r\n *   minutes: 9,\r\n *   seconds: 30\r\n * })\r\n * //=> '2 years 9 months 1 week 7 days 5 hours 9 minutes 30 seconds'\r\n *\r\n * @example\r\n * // Format partial duration\r\n * formatDuration({ months: 9, days: 2 })\r\n * //=> '9 months 2 days'\r\n *\r\n * @example\r\n * // Customize the format\r\n * formatDuration(\r\n *   {\r\n *     years: 2,\r\n *     months: 9,\r\n *     weeks: 1,\r\n *     days: 7,\r\n *     hours: 5,\r\n *     minutes: 9,\r\n *     seconds: 30\r\n *   },\r\n *   { format: ['months', 'weeks'] }\r\n * ) === '9 months 1 week'\r\n *\r\n * @example\r\n * // Customize the zeros presence\r\n * formatDuration({ years: 0, months: 9 })\r\n * //=> '9 months'\r\n * formatDuration({ years: 0, months: 9 }, { zero: true })\r\n * //=> '0 years 9 months'\r\n *\r\n * @example\r\n * // Customize the delimiter\r\n * formatDuration({ years: 2, months: 9, weeks: 3 }, { delimiter: ', ' })\r\n * //=> '2 years, 9 months, 3 weeks'\r\n */\nexport function formatDuration(duration, options) {\n  var _ref, _options$locale, _options$format, _options$zero, _options$delimiter;\n  const defaultOptions = getDefaultOptions();\n  const locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  const format = (_options$format = options === null || options === void 0 ? void 0 : options.format) !== null && _options$format !== void 0 ? _options$format : defaultFormat;\n  const zero = (_options$zero = options === null || options === void 0 ? void 0 : options.zero) !== null && _options$zero !== void 0 ? _options$zero : false;\n  const delimiter = (_options$delimiter = options === null || options === void 0 ? void 0 : options.delimiter) !== null && _options$delimiter !== void 0 ? _options$delimiter : \" \";\n  if (!locale.formatDistance) {\n    return \"\";\n  }\n  const result = format.reduce((acc, unit) => {\n    const token = \"x\".concat(unit.replace(/(^.)/, m => m.toUpperCase()));\n    const value = duration[unit];\n    if (value !== undefined && (zero || duration[unit])) {\n      return acc.concat(locale.formatDistance(token, value));\n    }\n    return acc;\n  }, []).join(delimiter);\n  return result;\n}\n\n// Fallback for modularized imports:\nexport default formatDuration;","map":{"version":3,"names":["defaultLocale","getDefaultOptions","defaultFormat","formatDuration","duration","options","_ref","_options$locale","_options$format","_options$zero","_options$delimiter","defaultOptions","locale","format","zero","delimiter","formatDistance","result","reduce","acc","unit","token","concat","replace","m","toUpperCase","value","undefined","join"],"sources":["C:/work/EMG/EMGHomePage/app/daikichi/ganttdules/node_modules/date-fns/formatDuration.js"],"sourcesContent":["import { defaultLocale } from \"./_lib/defaultLocale.js\";\r\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\r\n\r\n/**\r\n * The {@link formatDuration} function options.\r\n */\r\n\r\nconst defaultFormat = [\r\n  \"years\",\r\n  \"months\",\r\n  \"weeks\",\r\n  \"days\",\r\n  \"hours\",\r\n  \"minutes\",\r\n  \"seconds\",\r\n];\r\n\r\n/**\r\n * @name formatDuration\r\n * @category Common Helpers\r\n * @summary Formats a duration in human-readable format\r\n *\r\n * @description\r\n * Return human-readable duration string i.e. \"9 months 2 days\"\r\n *\r\n * @param duration - The duration to format\r\n * @param options - An object with options.\r\n *\r\n * @returns The formatted date string\r\n *\r\n * @example\r\n * // Format full duration\r\n * formatDuration({\r\n *   years: 2,\r\n *   months: 9,\r\n *   weeks: 1,\r\n *   days: 7,\r\n *   hours: 5,\r\n *   minutes: 9,\r\n *   seconds: 30\r\n * })\r\n * //=> '2 years 9 months 1 week 7 days 5 hours 9 minutes 30 seconds'\r\n *\r\n * @example\r\n * // Format partial duration\r\n * formatDuration({ months: 9, days: 2 })\r\n * //=> '9 months 2 days'\r\n *\r\n * @example\r\n * // Customize the format\r\n * formatDuration(\r\n *   {\r\n *     years: 2,\r\n *     months: 9,\r\n *     weeks: 1,\r\n *     days: 7,\r\n *     hours: 5,\r\n *     minutes: 9,\r\n *     seconds: 30\r\n *   },\r\n *   { format: ['months', 'weeks'] }\r\n * ) === '9 months 1 week'\r\n *\r\n * @example\r\n * // Customize the zeros presence\r\n * formatDuration({ years: 0, months: 9 })\r\n * //=> '9 months'\r\n * formatDuration({ years: 0, months: 9 }, { zero: true })\r\n * //=> '0 years 9 months'\r\n *\r\n * @example\r\n * // Customize the delimiter\r\n * formatDuration({ years: 2, months: 9, weeks: 3 }, { delimiter: ', ' })\r\n * //=> '2 years, 9 months, 3 weeks'\r\n */\r\nexport function formatDuration(duration, options) {\r\n  const defaultOptions = getDefaultOptions();\r\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\r\n  const format = options?.format ?? defaultFormat;\r\n  const zero = options?.zero ?? false;\r\n  const delimiter = options?.delimiter ?? \" \";\r\n\r\n  if (!locale.formatDistance) {\r\n    return \"\";\r\n  }\r\n\r\n  const result = format\r\n    .reduce((acc, unit) => {\r\n      const token = `x${unit.replace(/(^.)/, (m) => m.toUpperCase())}`;\r\n      const value = duration[unit];\r\n      if (value !== undefined && (zero || duration[unit])) {\r\n        return acc.concat(locale.formatDistance(token, value));\r\n      }\r\n      return acc;\r\n    }, [])\r\n    .join(delimiter);\r\n\r\n  return result;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default formatDuration;\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,yBAAyB;AACvD,SAASC,iBAAiB,QAAQ,0BAA0B;;AAE5D;AACA;AACA;;AAEA,MAAMC,aAAa,GAAG,CACpB,OAAO,EACP,QAAQ,EACR,OAAO,EACP,MAAM,EACN,OAAO,EACP,SAAS,EACT,SAAS,CACV;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,QAAQ,EAAEC,OAAO,EAAE;EAAA,IAAAC,IAAA,EAAAC,eAAA,EAAAC,eAAA,EAAAC,aAAA,EAAAC,kBAAA;EAChD,MAAMC,cAAc,GAAGV,iBAAiB,CAAC,CAAC;EAC1C,MAAMW,MAAM,IAAAN,IAAA,IAAAC,eAAA,GAAGF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEO,MAAM,cAAAL,eAAA,cAAAA,eAAA,GAAII,cAAc,CAACC,MAAM,cAAAN,IAAA,cAAAA,IAAA,GAAIN,aAAa;EACxE,MAAMa,MAAM,IAAAL,eAAA,GAAGH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEQ,MAAM,cAAAL,eAAA,cAAAA,eAAA,GAAIN,aAAa;EAC/C,MAAMY,IAAI,IAAAL,aAAA,GAAGJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAES,IAAI,cAAAL,aAAA,cAAAA,aAAA,GAAI,KAAK;EACnC,MAAMM,SAAS,IAAAL,kBAAA,GAAGL,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEU,SAAS,cAAAL,kBAAA,cAAAA,kBAAA,GAAI,GAAG;EAE3C,IAAI,CAACE,MAAM,CAACI,cAAc,EAAE;IAC1B,OAAO,EAAE;EACX;EAEA,MAAMC,MAAM,GAAGJ,MAAM,CAClBK,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IACrB,MAAMC,KAAK,OAAAC,MAAA,CAAOF,IAAI,CAACG,OAAO,CAAC,MAAM,EAAGC,CAAC,IAAKA,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAAE;IAChE,MAAMC,KAAK,GAAGtB,QAAQ,CAACgB,IAAI,CAAC;IAC5B,IAAIM,KAAK,KAAKC,SAAS,KAAKb,IAAI,IAAIV,QAAQ,CAACgB,IAAI,CAAC,CAAC,EAAE;MACnD,OAAOD,GAAG,CAACG,MAAM,CAACV,MAAM,CAACI,cAAc,CAACK,KAAK,EAAEK,KAAK,CAAC,CAAC;IACxD;IACA,OAAOP,GAAG;EACZ,CAAC,EAAE,EAAE,CAAC,CACLS,IAAI,CAACb,SAAS,CAAC;EAElB,OAAOE,MAAM;AACf;;AAEA;AACA,eAAed,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}