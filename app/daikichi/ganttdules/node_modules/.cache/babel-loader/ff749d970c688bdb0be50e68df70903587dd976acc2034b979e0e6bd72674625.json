{"ast":null,"code":"var _jsxFileName = \"C:\\\\work\\\\EMG\\\\app01\\\\src\\\\components\\\\Gantt.jsx\";\nimport React from \"react\";\nimport { parseISO, startOfMonth, endOfMonth, startOfWeek, endOfWeek, startOfDay, endOfDay, differenceInDays, differenceInHours, addDays, addHours, format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getRange(view, currentDate) {\n  if (view === \"month\") {\n    const start = startOfMonth(currentDate);\n    const end = endOfMonth(currentDate);\n    const days = differenceInDays(end, start) + 1;\n    const columns = Array.from({\n      length: days\n    }).map((_, i) => addDays(start, i));\n    return {\n      start,\n      end,\n      columns,\n      unit: \"day\"\n    };\n  }\n  if (view === \"week\") {\n    const start = startOfWeek(currentDate, {\n      weekStartsOn: 1\n    });\n    const end = endOfWeek(currentDate, {\n      weekStartsOn: 1\n    });\n    const days = differenceInDays(end, start) + 1;\n    const columns = Array.from({\n      length: days\n    }).map((_, i) => addDays(start, i));\n    return {\n      start,\n      end,\n      columns,\n      unit: \"day\"\n    };\n  }\n  // day view: use 24 hours\n  const start = startOfDay(currentDate);\n  const end = endOfDay(currentDate);\n  const columns = Array.from({\n    length: 24\n  }).map((_, i) => addHours(start, i));\n  return {\n    start,\n    end,\n    columns,\n    unit: \"hour\"\n  };\n}\nexport default function Gantt({\n  tasks,\n  view,\n  currentDate\n}) {\n  const range = getRange(view, currentDate);\n  const totalUnits = range.unit === \"day\" ? differenceInDays(range.end, range.start) + 1 : differenceInHours(range.end, range.start) + 1;\n  const unitLabel = d => range.unit === \"day\" ? format(d, \"MM/dd (E)\") : format(d, \"HH:00\");\n  const toPercent = date => {\n    const dt = typeof date === \"string\" ? parseISO(date) : date;\n    const diff = range.unit === \"day\" ? differenceInDays(dt, range.start) : differenceInHours(dt, range.start);\n    return diff / totalUnits * 100;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gantt\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline\",\n      children: range.columns.map((col, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-col\",\n        style: {\n          width: `${100 / range.columns.length}%`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-label\",\n          children: unitLabel(col)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-area\",\n      children: tasks.map((t, idx) => {\n        const start = parseISO(t.start);\n        const end = parseISO(t.end);\n        // ensure values within range\n        const startClamped = start < range.start ? range.start : start;\n        const endClamped = end > range.end ? range.end : end;\n        const left = toPercent(startClamped);\n        const right = toPercent(endClamped);\n        const width = Math.max(0.5, right - left); // at least small width\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            style: {\n              left: `${left}%`,\n              width: `${width}%`,\n              background: t.color\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-title\",\n              children: t.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-date\",\n              children: [format(start, \"MM/dd\"), \" - \", format(end, \"MM/dd\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, t.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_c = Gantt;\nvar _c;\n$RefreshReg$(_c, \"Gantt\");","map":{"version":3,"names":["React","parseISO","startOfMonth","endOfMonth","startOfWeek","endOfWeek","startOfDay","endOfDay","differenceInDays","differenceInHours","addDays","addHours","format","jsxDEV","_jsxDEV","getRange","view","currentDate","start","end","days","columns","Array","from","length","map","_","i","unit","weekStartsOn","Gantt","tasks","range","totalUnits","unitLabel","d","toPercent","date","dt","diff","className","children","col","style","width","fileName","_jsxFileName","lineNumber","columnNumber","t","idx","startClamped","endClamped","left","right","Math","max","background","color","title","id","_c","$RefreshReg$"],"sources":["C:/work/EMG/app01/src/components/Gantt.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  parseISO,\r\n  startOfMonth,\r\n  endOfMonth,\r\n  startOfWeek,\r\n  endOfWeek,\r\n  startOfDay,\r\n  endOfDay,\r\n  differenceInDays,\r\n  differenceInHours,\r\n  addDays,\r\n  addHours,\r\n  format,\r\n} from \"date-fns\";\r\n\r\nfunction getRange(view, currentDate) {\r\n  if (view === \"month\") {\r\n    const start = startOfMonth(currentDate);\r\n    const end = endOfMonth(currentDate);\r\n    const days = differenceInDays(end, start) + 1;\r\n    const columns = Array.from({ length: days }).map((_, i) => addDays(start, i));\r\n    return { start, end, columns, unit: \"day\" };\r\n  }\r\n  if (view === \"week\") {\r\n    const start = startOfWeek(currentDate, { weekStartsOn: 1 });\r\n    const end = endOfWeek(currentDate, { weekStartsOn: 1 });\r\n    const days = differenceInDays(end, start) + 1;\r\n    const columns = Array.from({ length: days }).map((_, i) => addDays(start, i));\r\n    return { start, end, columns, unit: \"day\" };\r\n  }\r\n  // day view: use 24 hours\r\n  const start = startOfDay(currentDate);\r\n  const end = endOfDay(currentDate);\r\n  const columns = Array.from({ length: 24 }).map((_, i) => addHours(start, i));\r\n  return { start, end, columns, unit: \"hour\" };\r\n}\r\n\r\nexport default function Gantt({ tasks, view, currentDate }) {\r\n  const range = getRange(view, currentDate);\r\n  const totalUnits =\r\n    range.unit === \"day\"\r\n      ? differenceInDays(range.end, range.start) + 1\r\n      : differenceInHours(range.end, range.start) + 1;\r\n\r\n  const unitLabel = (d) =>\r\n    range.unit === \"day\" ? format(d, \"MM/dd (E)\") : format(d, \"HH:00\");\r\n\r\n  const toPercent = (date) => {\r\n    const dt = typeof date === \"string\" ? parseISO(date) : date;\r\n    const diff =\r\n      range.unit === \"day\" ? differenceInDays(dt, range.start) : differenceInHours(dt, range.start);\r\n    return (diff / totalUnits) * 100;\r\n  };\r\n\r\n  return (\r\n    <div className=\"gantt\">\r\n      <div className=\"timeline\">\r\n        {range.columns.map((col, i) => (\r\n          <div className=\"time-col\" key={i} style={{ width: `${100 / range.columns.length}%` }}>\r\n            <div className=\"time-label\">{unitLabel(col)}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"track-area\">\r\n        {tasks.map((t, idx) => {\r\n          const start = parseISO(t.start);\r\n          const end = parseISO(t.end);\r\n          // ensure values within range\r\n          const startClamped = start < range.start ? range.start : start;\r\n          const endClamped = end > range.end ? range.end : end;\r\n          const left = toPercent(startClamped);\r\n          const right = toPercent(endClamped);\r\n          const width = Math.max(0.5, right - left); // at least small width\r\n          return (\r\n            <div className=\"track-row\" key={t.id}>\r\n              <div className=\"task\" style={{ left: `${left}%`, width: `${width}%`, background: t.color }}>\r\n                <div className=\"task-title\">{t.title}</div>\r\n                <div className=\"task-date\">{format(start, \"MM/dd\")} - {format(end, \"MM/dd\")}</div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}